{
  "Uuid": "55c5797b-1bba-45c4-ad90-1a7c80eacea9",
  "IsCustomNode": false,
  "Description": "Places block references along a corridor at stations defined in an Excel file.",
  "Name": "Roads_CorridorBlockRefs",
  "ElementResolver": {
    "ResolutionMap": {
      "CoordinateSystem": {
        "Key": "Autodesk.DesignScript.Geometry.CoordinateSystem",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "ad8d596f1e99436a8fc282edce897284",
      "Name": "Excel File Path",
      "Type": "string",
      "Type2": "string",
      "Value": ".\\LightPoles.xlsx",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "7c2c0905881646b882a7b8498bbab958",
      "Name": "Sheet Name",
      "Type": "string",
      "Type2": "string",
      "Value": "LightPoles",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "bde1e13d2f2148f1947e5f2b488727a7",
      "Name": "Align Block References Vertically?",
      "Type": "boolean",
      "Type2": "boolean",
      "Value": "true",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "296c4fdad3dc459d8791cf6e29c74825",
      "Inputs": [
        {
          "Id": "c61d5ba8b82143c6ab223c6867438f5d",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "235c62beb2fe4ebc8877eed47eacf7af",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "6356610007ea447492242e2331d1ddc8",
      "Inputs": [
        {
          "Id": "e4ab4c960468459c8eaaa5059b667e92",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bc576d2c61d4ec39dd18dcaad2e3cb4",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cde74105709944d482ca90e56a3bb8a8",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "7f4d2326a42c4203bab6903c402e0973",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "94bced29e30740879a8b6ec1e694ca1d",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "29ec5226dce847cc96f4770a2fbeae33",
      "Inputs": [
        {
          "Id": "e313c77b6cb24a7cbd2cc9e6ff0f5e00",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec5792180ba24a26af1c51de2ea71de0",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "99ef765fcfef42fd8cd254f542329342",
      "Inputs": [
        {
          "Id": "73a7096af1be424db088ad8fc4a1b565",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ea0be03dedb47939b22637f06cda2df",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30edfbe2153445f0a5ea00c035ef2456",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "580af4fd703d4e4987941bb807aafa32",
      "Inputs": [
        {
          "Id": "8387a6c3e47f4773aa99040b5e5c698c",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e80a6759e76416c89457beb3d182b87",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc092f9340964536bd895885ab746e32",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "b254f1fea5b04033a1e554e22d886ff7",
      "Inputs": [
        {
          "Id": "ffeb9ba92de04624b1087bd3bebc20eb",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db91f333cc28422aaf5129ed291aef67",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1544bc2d1d7645d3967759d0616b244b",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "a0b1c3ec90054b2c9d9f9776ffcff473",
      "Inputs": [
        {
          "Id": "f70d4c18a81a4dab8164f5340bc54c5b",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ded24cec9b94fa2b32f3cbec384b493",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9abf8f651ec94edb925a960559d0bc92",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "558fae2b7f5e4d1d9f19cf657517830a",
      "Inputs": [
        {
          "Id": "c7204beb55d946c984bfed8cce70438a",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "edd9f9af5e584d769b0a0a8fb9131d2d",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91657e756fdc44b6a053ef69b37c5c6a",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "8842eea1c75344df843c8e6b590a1b33",
      "Inputs": [
        {
          "Id": "cefdca00f7564fbba2653ca55f702ff3",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd1e95f9dcb745a39cfc9e33e7498aa8",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5bc0070f3dde4daa9aca81057d2b5b31",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Corridor",
      "Id": "41c0bc2ad4bf47ec98ebb8bccf17f8f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8c3712c44b70420b8e757416ac402cc6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Baseline",
      "Id": "87b99aa33fe84570bfd18f91347aa8dd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a611ba85fad04e75ab63226571f40e9b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "BlockName",
      "Id": "e6fa94e01f8b47029cae23672aac6cfc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e5c52e20e9504b7cae7b1f7624ed4955",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "PointCode",
      "Id": "ce9009a97e3947ccb1f4f4cae7fd9cc4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c6700750205e45e2984bf9b24e5be6c8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Station",
      "Id": "9a0faba306b949438914bd69080c8106",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dc28f57a798c4971b39e37fe2fb86bbd",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Selection.CorridorByName@string,Autodesk.AutoCAD.DynamoNodes.Document",
      "Id": "dfb4b579583a4afbba2130623cfcd960",
      "Inputs": [
        {
          "Id": "db1fcec67e8e453da79cae25b1259812",
          "Name": "name",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7478ee994e0d4d87a4c36c79b4af0e2b",
          "Name": "document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8277dba5898544798b1d08acb9fb78da",
          "Name": "Corridor",
          "Description": "Corridor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Select a corridor by a specified corridor name.\n\nSelection.CorridorByName (name: string, document: Document): Corridor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.Current",
      "Id": "1447baf762ed4b769f6d2050ff1a1a5f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d92f0da82d314aa9b1faed312a868343",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the current AutoCAD document.\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Corridor.BaselineByName@string",
      "Id": "e6ea97a585eb4cd899e8759d1fd9736d",
      "Inputs": [
        {
          "Id": "f6947257f4584b09b2c205fd0fdfa7b9",
          "Name": "corridor",
          "Description": "Autodesk.Civil.DynamoNodes.Corridor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a578d8c036b41b19be91dfb295a0e82",
          "Name": "name",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca47b71ccf1f48d19aab90cccbc5c41e",
          "Name": "Baseline",
          "Description": "Baseline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a specified baseline by its name from the corridor.\n\nCorridor.BaselineByName (name: string): Baseline"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Baseline.CorridorFeatureLinesByCode@string",
      "Id": "0bfb16ba54d3472d8dad166e01061456",
      "Inputs": [
        {
          "Id": "14904ce375f447dba2d52faabfa4ff4d",
          "Name": "baseline",
          "Description": "Autodesk.Civil.DynamoNodes.Baseline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2f6d0d767904a06a4531ba23aad6666",
          "Name": "code",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c085402f1d094359b22e2f2183cc4b5c",
          "Name": "CorridorFeatureLine[]",
          "Description": "CorridorFeatureLine[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the corridor feature lines of the baseline by a specified code name.\n\nBaseline.CorridorFeatureLinesByCode (code: string): CorridorFeatureLine[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.CorridorFeatureLine.CoordinateSystemByStation@double,bool",
      "Id": "5cf517582cd94b8e9865e587c7d502af",
      "Inputs": [
        {
          "Id": "5aa9e20d1c3c424fa90b321e4aab59c3",
          "Name": "corridorFeatureLine",
          "Description": "Autodesk.Civil.DynamoNodes.CorridorFeatureLine",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5dae1dd81a614c8386c2f56c7259ea58",
          "Name": "station",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74fc9ee479c64a6b8403088570fba387",
          "Name": "vertical",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "493c3dfd0e924bf6b02ff1aee20300ec",
          "Name": "CoordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the coordinate system at a specified station.\n\nCorridorFeatureLine.CoordinateSystemByStation (station: double, vertical: bool = true): CoordinateSystem"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.BlockReference.ByCoordinateSystem@Autodesk.AutoCAD.DynamoNodes.Block,Autodesk.DesignScript.Geometry.CoordinateSystem,string,Autodesk.AutoCAD.DynamoNodes.Block",
      "Id": "ecd584ae27ee45d184dc3a8851fbea23",
      "Inputs": [
        {
          "Id": "6f9858d69b224aabb69c7edf736783ed",
          "Name": "sourceBlock",
          "Description": "Block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc7419af72ae40a68b1e85b0f82b14d3",
          "Name": "coordinateSystem",
          "Description": "CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db8af535cfa64899a2162cecf8b7dfe3",
          "Name": "layer",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb73607c3bda4cf6a2f9bbc557862389",
          "Name": "block",
          "Description": "Block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae5bf77cf133445eb208a346eb5254e2",
          "Name": "BlockReference",
          "Description": "BlockReference",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a block reference by coordinate system.\n\nBlockReference.ByCoordinateSystem (sourceBlock: Block, coordinateSystem: CoordinateSystem, layer: string, block: Block): BlockReference"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "d1c33bc03b4841258df31215c51a0e27",
      "Inputs": [
        {
          "Id": "0b6e4dbf7a0844a0a876e2b095c5b30e",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3dd9adb28d354c74b3dfda16dab86d45",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1fe07535528c440e90b67f91ff3cd20b",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Layer",
      "Id": "694130ef86ed49e78594afdcf4f483db",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca027feeca3247dca75313150cdc2643",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.Current",
      "Id": "973f7487d33c447db3f252c149972865",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0af5798630c4404d8c12d6bb7cf351c6",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the current AutoCAD document.\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.ModelSpace",
      "Id": "0c665060d3e2429f97dec73d6bc7fbe7",
      "Inputs": [
        {
          "Id": "12527b67366c400aaf85cc07cb0c163d",
          "Name": "document",
          "Description": "Autodesk.AutoCAD.DynamoNodes.Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d83755212d04b818e0c917108b8bcdd",
          "Name": "Block",
          "Description": "Block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the model space block table record.\n\nDocument.ModelSpace: Block"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.CorridorFeatureLine.OffsetElevationByStation@double",
      "Id": "eb4cd69e2ef8474897eaeddc51784bfb",
      "Inputs": [
        {
          "Id": "3310555b694f4b249c8ea6fb26e85e6b",
          "Name": "corridorFeatureLine",
          "Description": "Autodesk.Civil.DynamoNodes.CorridorFeatureLine",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c4f15ea8b844f47baf9d7decc0163ba",
          "Name": "station",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93c8c12312524126ad71f3572cef36f4",
          "Name": "Offset",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "818963759d6f427095a13d47f72a5a05",
          "Name": "Elevation",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the offset and elevation at a specified station.\n\nCorridorFeatureLine.OffsetElevationByStation (station: double): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.CorridorFeatureLine.PolyCurve",
      "Id": "65fe3ccff9154c079e5e84eb10d6c8ca",
      "Inputs": [
        {
          "Id": "7116ac9bfe374fa0908cffe8b34f8077",
          "Name": "corridorFeatureLine",
          "Description": "Autodesk.Civil.DynamoNodes.CorridorFeatureLine",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63e547bf92fd4212a10084288acdb134",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the polycurve of the feature line.\n\nCorridorFeatureLine.PolyCurve: PolyCurve"
    },
    {
      "ConcreteType": "Autodesk.Civil.DynamoNodes.Corridors, Civil3DNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "a295a30f98ea4b32b0e1a124bfaf99c8",
      "Inputs": [
        {
          "Id": "3acdca0a5284409597f45203e0df4493",
          "Name": "document",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91c945862edb440f8e42a3860d318262",
          "Name": "Corridor[]",
          "Description": "Corridor[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select all corridors in the drawing."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Corridor.GetSolids@string,string,string,string,string",
      "Id": "764ad02cb9af46048f4e17ef512dfd94",
      "Inputs": [
        {
          "Id": "cf77a372e5444617b25eada91de2eb7a",
          "Name": "corridor",
          "Description": "Autodesk.Civil.DynamoNodes.Corridor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea74a4d43a2a47f5988c0b868fecd67a",
          "Name": "baselineName",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d94890aea2c1424f95851d071538b3b7",
          "Name": "regionName",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25746b20e267400fad09acb38609145d",
          "Name": "assemblyName",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0712118acadc4a62b2eb14e12bcc26e2",
          "Name": "codeName",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0638f868b9244dd399c7d1b43b7d6041",
          "Name": "side",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8817fcfb9894137b3e279f96e6c39cd",
          "Name": "Solid[]",
          "Description": "Solid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get solids generated from the corridor, filtered by property values of the solids.\n\nCorridor.GetSolids (baselineName: string = null, regionName: string = null, assemblyName: string = null, codeName: string = null, side: string = null): Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Object.Geometry",
      "Id": "991940503451454e84deef55666db580",
      "Inputs": [
        {
          "Id": "f94acc1fece049029f45356bf58699df",
          "Name": "object",
          "Description": "Autodesk.AutoCAD.DynamoNodes.Object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "153e17e865fe4a28866a482c4622df93",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Dynamo representation of this object.\n\nObject.Geometry: Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Id": "af8d9f363c2c4e829abe83aca6a0553c",
      "Inputs": [
        {
          "Id": "58c45d4a21b6409f911fcc61ee902df2",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "460d4cca01fa47af88d0f6906d95ba09",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b04ae3899d7c4a58873a02efde0c14f0",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Color.ByARGB@int,int,int,int",
      "Id": "a3eff922c21f488fb7b7482966fa2f40",
      "Inputs": [
        {
          "Id": "85d331c79a94408baa4eb9a7261225d8",
          "Name": "alpha",
          "Description": "Alpha value (between 0 and 255 inclusive)\n\nint\nDefault value : 255",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b24574297b86485085c384e4e09624a1",
          "Name": "red",
          "Description": "Red value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8c6b8bd9b454b0bbeb47159c2cef642",
          "Name": "green",
          "Description": "Green value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea76f2c6d2154e93a97cfd25232c1da8",
          "Name": "blue",
          "Description": "Blue value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1b25053070046cdad882f0609fac709",
          "Name": "color",
          "Description": "Color created from ARGB",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a color by alpha, red, green, and blue components.\n\nColor.ByARGB (alpha: int = 255, red: int = 0, green: int = 0, blue: int = 0): Color"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 255.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 20.0,
      "Id": "028c42939e3640aebc1247de08cb61d3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99cfcf931eac4ee68a0f3758983fdd17",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.Current",
      "Id": "e8cd46c1a5a144a8b4471206fc0a5170",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9e224226d39248cd9be263ff9babd8f4",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the current AutoCAD document.\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.ScopedIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d95dda1e8a4443638f211d336235bc2c",
      "Inputs": [
        {
          "Id": "341a773933404eee95990e209ec5f555",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d97b82e32c048a78de7f4f98ed9ecc7",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da1c49820adf4c0e899c3d006a068570",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4ee8b2e87bc45309a1830d8a073e242",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "0e05380c8af041c18b4abb658ad306e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ed2f0cc13f3c43b9a6666a153118e350",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "null;",
      "Id": "593cdd848b354b74b27a6d40002e6fe7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8fc8fb0ec9c0481eb538e92d72aa43d1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "offset > 0\n\t? CoordinateSystem.Rotate(\n\t\tcs,\n\t\tCoordinateSystem.XYPlane(cs),\n\t\t180)\n\t: cs;",
      "Id": "125b92b664454420ae6e90fe3cdae59f",
      "Inputs": [
        {
          "Id": "371764c3d5a149639ffda54f6df3d04f",
          "Name": "offset",
          "Description": "offset",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "454c60c90cc540388390dcfb8beec362",
          "Name": "cs",
          "Description": "cs",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "202c7c22da4d48e0bf626708659f616b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.BlockByName@string",
      "Id": "7afccccc444248c98190051ba5bd155b",
      "Inputs": [
        {
          "Id": "d27d4643d33e420c9c0078301cb52ca0",
          "Name": "document",
          "Description": "Autodesk.AutoCAD.DynamoNodes.Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "260a4a9f58e34cd9b7f97fa168cc686a",
          "Name": "name",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a5b7881c3d44c4387096d5379dbe78e",
          "Name": "Block",
          "Description": "Block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a block table record by a specified name.\n\nDocument.BlockByName (name: string): Block"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.Current",
      "Id": "00735837102a4ef8855d36386e956d7a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "32c2927ab3e5494a8e22b3af29319aa1",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the current AutoCAD document.\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\zjensen\\OneDrive - Wood Rodgers Inc\\C3D Dynamo Primer\\Example Graphs\\Does Not Require C3D 2024.1\\LightPoles.xlsx",
      "InputValue": ".\\LightPoles.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "ad8d596f1e99436a8fc282edce897284",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cea4a526c800449cbed2563d02c107a5",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "LightPoles",
      "Id": "7c2c0905881646b882a7b8498bbab958",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3e21ff696eb049de8289af828ce7f565",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "bde1e13d2f2148f1947e5f2b488727a7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2bfbb37384564ee1be6297563a177588",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.OpenXMLImportExcel@string,string,int,int,bool",
      "Id": "7888b19ebfa249fab09caabc5b2a7a62",
      "Inputs": [
        {
          "Id": "786a411603874c978feb5432614530af",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfec3059d8dc4daab03894361d4f23b1",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ced5dbd14fc4c84a4479b1569649ee4",
          "Name": "startRow",
          "Description": "Start row for reading data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5af53f2002e54346bd79e25cf541b7f4",
          "Name": "startColumn",
          "Description": "Start column for reading data. Enter 0 for Column A, 1 for Column B, etc.\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a21428840ebd4421b5e182d615d9aa2e",
          "Name": "readAsString",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6af1e4fbe9c44d9e9deaf540be865a6a",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet by using the Open XML standard. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0].\n\nData.OpenXMLImportExcel (filePath: string, sheetName: string, startRow: int = 0, startColumn: int = 0, readAsString: bool = false): var[][]"
    }
  ],
  "Connectors": [
    {
      "Start": "235c62beb2fe4ebc8877eed47eacf7af",
      "End": "73a7096af1be424db088ad8fc4a1b565",
      "Id": "b5d6b8e0e57e47509f9c5435a21ac628",
      "IsHidden": "False"
    },
    {
      "Start": "cde74105709944d482ca90e56a3bb8a8",
      "End": "e313c77b6cb24a7cbd2cc9e6ff0f5e00",
      "Id": "7c33b4841f4949de9176b6f9783d946a",
      "IsHidden": "False"
    },
    {
      "Start": "94bced29e30740879a8b6ec1e694ca1d",
      "End": "4bc576d2c61d4ec39dd18dcaad2e3cb4",
      "Id": "d34b5af9504a4d088da2a440714161b5",
      "IsHidden": "False"
    },
    {
      "Start": "ec5792180ba24a26af1c51de2ea71de0",
      "End": "6ea0be03dedb47939b22637f06cda2df",
      "Id": "deb49d46745d4785b479a8cdc60a2935",
      "IsHidden": "False"
    },
    {
      "Start": "30edfbe2153445f0a5ea00c035ef2456",
      "End": "0b6e4dbf7a0844a0a876e2b095c5b30e",
      "Id": "257e65bdf7fa4a59a174daf3066e0840",
      "IsHidden": "False"
    },
    {
      "Start": "30edfbe2153445f0a5ea00c035ef2456",
      "End": "cefdca00f7564fbba2653ca55f702ff3",
      "Id": "864262100bfa4c6681385a22676945cf",
      "IsHidden": "False"
    },
    {
      "Start": "30edfbe2153445f0a5ea00c035ef2456",
      "End": "c7204beb55d946c984bfed8cce70438a",
      "Id": "c9d206b7168f4c588f7b6cc1f6fd9636",
      "IsHidden": "False"
    },
    {
      "Start": "30edfbe2153445f0a5ea00c035ef2456",
      "End": "f70d4c18a81a4dab8164f5340bc54c5b",
      "Id": "d0f4c38c791047799237f704699c3f68",
      "IsHidden": "False"
    },
    {
      "Start": "30edfbe2153445f0a5ea00c035ef2456",
      "End": "ffeb9ba92de04624b1087bd3bebc20eb",
      "Id": "793594c9a6c94cdf944f87800a65cfe0",
      "IsHidden": "False"
    },
    {
      "Start": "30edfbe2153445f0a5ea00c035ef2456",
      "End": "8387a6c3e47f4773aa99040b5e5c698c",
      "Id": "18fdf5500192477cb7168d52e64310d7",
      "IsHidden": "False"
    },
    {
      "Start": "fc092f9340964536bd895885ab746e32",
      "End": "db1fcec67e8e453da79cae25b1259812",
      "Id": "efc61e53091b4ddaa4c6f870efb35848",
      "IsHidden": "False"
    },
    {
      "Start": "1544bc2d1d7645d3967759d0616b244b",
      "End": "d2f6d0d767904a06a4531ba23aad6666",
      "Id": "6d5e3efba66547ec99bb811bd551b946",
      "IsHidden": "False"
    },
    {
      "Start": "9abf8f651ec94edb925a960559d0bc92",
      "End": "9a578d8c036b41b19be91dfb295a0e82",
      "Id": "8d145bda25e44bc7a918e9ba5d18d5a1",
      "IsHidden": "False"
    },
    {
      "Start": "91657e756fdc44b6a053ef69b37c5c6a",
      "End": "5dae1dd81a614c8386c2f56c7259ea58",
      "Id": "22dee10917f44235b41ae853f17c7463",
      "IsHidden": "False"
    },
    {
      "Start": "91657e756fdc44b6a053ef69b37c5c6a",
      "End": "3c4f15ea8b844f47baf9d7decc0163ba",
      "Id": "788c87f0994849edbc3e194d4ee5e76a",
      "IsHidden": "False"
    },
    {
      "Start": "5bc0070f3dde4daa9aca81057d2b5b31",
      "End": "260a4a9f58e34cd9b7f97fa168cc686a",
      "Id": "6471eb9bfb0b437a8431c9ce8c83bd2e",
      "IsHidden": "False"
    },
    {
      "Start": "8c3712c44b70420b8e757416ac402cc6",
      "End": "7e80a6759e76416c89457beb3d182b87",
      "Id": "9ee8a77d68f649b28b60f068b5441cef",
      "IsHidden": "False"
    },
    {
      "Start": "a611ba85fad04e75ab63226571f40e9b",
      "End": "0ded24cec9b94fa2b32f3cbec384b493",
      "Id": "9bf162f179b246978aba4894770cfa33",
      "IsHidden": "False"
    },
    {
      "Start": "e5c52e20e9504b7cae7b1f7624ed4955",
      "End": "cd1e95f9dcb745a39cfc9e33e7498aa8",
      "Id": "6c45805db62245b9aac33b7cf44c94c0",
      "IsHidden": "False"
    },
    {
      "Start": "c6700750205e45e2984bf9b24e5be6c8",
      "End": "db91f333cc28422aaf5129ed291aef67",
      "Id": "645b9299ebd749279f936109b606f3d8",
      "IsHidden": "False"
    },
    {
      "Start": "dc28f57a798c4971b39e37fe2fb86bbd",
      "End": "edd9f9af5e584d769b0a0a8fb9131d2d",
      "Id": "86b22c9abd174c2499535c6ef64c2048",
      "IsHidden": "False"
    },
    {
      "Start": "8277dba5898544798b1d08acb9fb78da",
      "End": "f6947257f4584b09b2c205fd0fdfa7b9",
      "Id": "1433241bc00a4d1e8c49c375c94a1597",
      "IsHidden": "False"
    },
    {
      "Start": "d92f0da82d314aa9b1faed312a868343",
      "End": "7478ee994e0d4d87a4c36c79b4af0e2b",
      "Id": "427c66b4598b49f19eab7a9ca7ea167a",
      "IsHidden": "False"
    },
    {
      "Start": "ca47b71ccf1f48d19aab90cccbc5c41e",
      "End": "14904ce375f447dba2d52faabfa4ff4d",
      "Id": "e68448080ab0466c96f3a3e35b45750a",
      "IsHidden": "False"
    },
    {
      "Start": "c085402f1d094359b22e2f2183cc4b5c",
      "End": "7116ac9bfe374fa0908cffe8b34f8077",
      "Id": "a68b8119ea9746e4928b273f638c8429",
      "IsHidden": "False"
    },
    {
      "Start": "c085402f1d094359b22e2f2183cc4b5c",
      "End": "3310555b694f4b249c8ea6fb26e85e6b",
      "Id": "c68aa75333564238b082d8df01337fc1",
      "IsHidden": "False"
    },
    {
      "Start": "c085402f1d094359b22e2f2183cc4b5c",
      "End": "5aa9e20d1c3c424fa90b321e4aab59c3",
      "Id": "914bbbf44eb24522bb2ebd373ececdb1",
      "IsHidden": "False"
    },
    {
      "Start": "493c3dfd0e924bf6b02ff1aee20300ec",
      "End": "454c60c90cc540388390dcfb8beec362",
      "Id": "137fcafdfe0d43cda555e19e59135390",
      "IsHidden": "False"
    },
    {
      "Start": "1fe07535528c440e90b67f91ff3cd20b",
      "End": "db8af535cfa64899a2162cecf8b7dfe3",
      "Id": "95229558dc44421eaa5b2cfb56505e3f",
      "IsHidden": "False"
    },
    {
      "Start": "ca027feeca3247dca75313150cdc2643",
      "End": "3dd9adb28d354c74b3dfda16dab86d45",
      "Id": "2f5986a47b0049929e20979d86a09855",
      "IsHidden": "False"
    },
    {
      "Start": "0af5798630c4404d8c12d6bb7cf351c6",
      "End": "12527b67366c400aaf85cc07cb0c163d",
      "Id": "5efd578271564d879c3e1b734db3af50",
      "IsHidden": "False"
    },
    {
      "Start": "7d83755212d04b818e0c917108b8bcdd",
      "End": "fb73607c3bda4cf6a2f9bbc557862389",
      "Id": "63d2b83b8bf746e78ab1f715cfd555f9",
      "IsHidden": "False"
    },
    {
      "Start": "93c8c12312524126ad71f3572cef36f4",
      "End": "371764c3d5a149639ffda54f6df3d04f",
      "Id": "5c8fa6e860454ec8bf6c31f656700da5",
      "IsHidden": "False"
    },
    {
      "Start": "91c945862edb440f8e42a3860d318262",
      "End": "cf77a372e5444617b25eada91de2eb7a",
      "Id": "c377bd22552541e9b7196f09bfe22a93",
      "IsHidden": "False"
    },
    {
      "Start": "a8817fcfb9894137b3e279f96e6c39cd",
      "End": "f94acc1fece049029f45356bf58699df",
      "Id": "cb682e9480304ee0b25a18384166862a",
      "IsHidden": "False"
    },
    {
      "Start": "153e17e865fe4a28866a482c4622df93",
      "End": "58c45d4a21b6409f911fcc61ee902df2",
      "Id": "e759c054bdab43d0b6267993b4f38c9f",
      "IsHidden": "False"
    },
    {
      "Start": "b04ae3899d7c4a58873a02efde0c14f0",
      "End": "3d97b82e32c048a78de7f4f98ed9ecc7",
      "Id": "d51e42155f7e4428886439b7da683d11",
      "IsHidden": "False"
    },
    {
      "Start": "c1b25053070046cdad882f0609fac709",
      "End": "460d4cca01fa47af88d0f6906d95ba09",
      "Id": "3274097cfc1743828aea5c660b6efc6a",
      "IsHidden": "False"
    },
    {
      "Start": "99cfcf931eac4ee68a0f3758983fdd17",
      "End": "85d331c79a94408baa4eb9a7261225d8",
      "Id": "6df1ebbd615e4eac95895234103b259d",
      "IsHidden": "False"
    },
    {
      "Start": "9e224226d39248cd9be263ff9babd8f4",
      "End": "3acdca0a5284409597f45203e0df4493",
      "Id": "ebcbd29665ea4142b016da2084c97d5d",
      "IsHidden": "False"
    },
    {
      "Start": "ed2f0cc13f3c43b9a6666a153118e350",
      "End": "341a773933404eee95990e209ec5f555",
      "Id": "1dcefc65e89243aba2d61f30e3265d6b",
      "IsHidden": "False"
    },
    {
      "Start": "8fc8fb0ec9c0481eb538e92d72aa43d1",
      "End": "da1c49820adf4c0e899c3d006a068570",
      "Id": "1ed50e22868a41629b85c460d117dcbf",
      "IsHidden": "False"
    },
    {
      "Start": "202c7c22da4d48e0bf626708659f616b",
      "End": "fc7419af72ae40a68b1e85b0f82b14d3",
      "Id": "8a7d930905b144a99b98d53a8da77a41",
      "IsHidden": "False"
    },
    {
      "Start": "1a5b7881c3d44c4387096d5379dbe78e",
      "End": "6f9858d69b224aabb69c7edf736783ed",
      "Id": "eb53490bba6a471fa83d087fb186fa0b",
      "IsHidden": "False"
    },
    {
      "Start": "32c2927ab3e5494a8e22b3af29319aa1",
      "End": "d27d4643d33e420c9c0078301cb52ca0",
      "Id": "34dd3705ca3a426b8ba3304b57dc2461",
      "IsHidden": "False"
    },
    {
      "Start": "cea4a526c800449cbed2563d02c107a5",
      "End": "786a411603874c978feb5432614530af",
      "Id": "ab4711903726458fbafb4debe74d2478",
      "IsHidden": "False"
    },
    {
      "Start": "3e21ff696eb049de8289af828ce7f565",
      "End": "cfec3059d8dc4daab03894361d4f23b1",
      "Id": "efb0fb3c00d24c10ada381531568e903",
      "IsHidden": "False"
    },
    {
      "Start": "2bfbb37384564ee1be6297563a177588",
      "End": "74fc9ee479c64a6b8403088570fba387",
      "Id": "f2854c4326444e83bccfc1b0cc29bfaf",
      "IsHidden": "False"
    },
    {
      "Start": "6af1e4fbe9c44d9e9deaf540be865a6a",
      "End": "c61d5ba8b82143c6ab223c6867438f5d",
      "Id": "e88c0f8e42a6485eb992f64a21825be1",
      "IsHidden": "False"
    },
    {
      "Start": "6af1e4fbe9c44d9e9deaf540be865a6a",
      "End": "e4ab4c960468459c8eaaa5059b667e92",
      "Id": "170051a5802c4864abac5a89405db6ac",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "LightPoles.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "ad8d596f1e99436a8fc282edce897284"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.15",
      "Data": {}
    }
  ],
  "Author": "Autodesk, Inc.",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.15.1.6076",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 2503617.25,
      "EyeY": 6341.076171875,
      "EyeZ": -1634124.0,
      "LookX": 2905.75,
      "LookY": -1268.6630859375,
      "LookZ": -396.75,
      "UpX": 0.18902997672557831,
      "UpY": 0.98162746429443359,
      "UpZ": -0.025987034663558006
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "296c4fdad3dc459d8791cf6e29c74825",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 996.31873065270224,
        "Y": 100.69199489709482
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "6356610007ea447492242e2331d1ddc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 986.20618654823852,
        "Y": 345.86322406753823
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "7f4d2326a42c4203bab6903c402e0973",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 775.0755747772871,
        "Y": 445.49019365865911
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "29ec5226dce847cc96f4770a2fbeae33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1242.0494304342265,
        "Y": 345.86322406753823
      },
      {
        "Name": "Dictionary.ByKeysValues",
        "ShowGeometry": true,
        "Id": "99ef765fcfef42fd8cd254f542329342",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1519.2742202669456,
        "Y": 100.69199489709482
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "580af4fd703d4e4987941bb807aafa32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2469.3258876227596,
        "Y": 757.62691135105217
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "b254f1fea5b04033a1e554e22d886ff7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2469.3258876227596,
        "Y": 1131.6012142702871
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "a0b1c3ec90054b2c9d9f9776ffcff473",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2469.3258876227596,
        "Y": 923.28476557074146
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "558fae2b7f5e4d1d9f19cf657517830a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2469.3258876227596,
        "Y": 1307.9237171099403
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "8842eea1c75344df843c8e6b590a1b33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2478.0157135885443,
        "Y": 1791.7526679904561
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "41c0bc2ad4bf47ec98ebb8bccf17f8f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1629.2742202669456,
        "Y": 793.14417641502268
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "87b99aa33fe84570bfd18f91347aa8dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1629.2742202669456,
        "Y": 956.93501350958343
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "e6fa94e01f8b47029cae23672aac6cfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1628.2742202669456,
        "Y": 1831.1733435041538
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "ce9009a97e3947ccb1f4f4cae7fd9cc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1629.2742202669456,
        "Y": 1166.4573050787767
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "9a0faba306b949438914bd69080c8106",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1629.2742202669456,
        "Y": 1343.586483061772
      },
      {
        "Name": "Selection.CorridorByName",
        "ShowGeometry": true,
        "Id": "dfb4b579583a4afbba2130623cfcd960",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3050.836244899489,
        "Y": 760.09560124905806
      },
      {
        "Name": "Document.Current",
        "ShowGeometry": true,
        "Id": "1447baf762ed4b769f6d2050ff1a1a5f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2793.3688323348356,
        "Y": 852.14131162251
      },
      {
        "Name": "Corridor.BaselineByName",
        "ShowGeometry": true,
        "Id": "e6ea97a585eb4cd899e8759d1fd9736d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3433.5559972652591,
        "Y": 889.92323713001406
      },
      {
        "Name": "Baseline.CorridorFeatureLinesByCode",
        "ShowGeometry": true,
        "Id": "0bfb16ba54d3472d8dad166e01061456",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3762.43868518212,
        "Y": 1097.3512611842243
      },
      {
        "Name": "CorridorFeatureLine.CoordinateSystemByStation",
        "ShowGeometry": false,
        "Id": "5cf517582cd94b8e9865e587c7d502af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4308.4293777093371,
        "Y": 1588.8707390503073
      },
      {
        "Name": "BlockReference.ByCoordinateSystem",
        "ShowGeometry": true,
        "Id": "ecd584ae27ee45d184dc3a8851fbea23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6058.921428299911,
        "Y": 1904.1265680564545
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "d1c33bc03b4841258df31215c51a0e27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2478.0157135885443,
        "Y": 1965.2094196028384
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "694130ef86ed49e78594afdcf4f483db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1629.2742202669456,
        "Y": 2001.3603035605897
      },
      {
        "Name": "Document.Current",
        "ShowGeometry": true,
        "Id": "973f7487d33c447db3f252c149972865",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5311.6650695151093,
        "Y": 2085.0700925579545
      },
      {
        "Name": "Document.ModelSpace",
        "ShowGeometry": true,
        "Id": "0c665060d3e2429f97dec73d6bc7fbe7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5572.09213458008,
        "Y": 2085.0700925579545
      },
      {
        "Name": "CorridorFeatureLine.OffsetElevationByStation",
        "ShowGeometry": true,
        "Id": "eb4cd69e2ef8474897eaeddc51784bfb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4830.3064721735554,
        "Y": 1284.0781657296166
      },
      {
        "Name": "CorridorFeatureLine.PolyCurve",
        "ShowGeometry": true,
        "Id": "65fe3ccff9154c079e5e84eb10d6c8ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4299.7395517435525,
        "Y": 862.12371797351284
      },
      {
        "Name": "Corridors",
        "ShowGeometry": true,
        "Id": "a295a30f98ea4b32b0e1a124bfaf99c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2731.11278185077,
        "Y": -42.304226221775025
      },
      {
        "Name": "Corridor.GetSolids",
        "ShowGeometry": true,
        "Id": "764ad02cb9af46048f4e17ef512dfd94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2951.7123475566782,
        "Y": -42.304226221775025
      },
      {
        "Name": "Object.Geometry",
        "ShowGeometry": false,
        "Id": "991940503451454e84deef55666db580",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3248.9922007962082,
        "Y": -42.304226221775025
      },
      {
        "Name": "GeometryColor.ByGeometryColor",
        "ShowGeometry": true,
        "Id": "af8d9f363c2c4e829abe83aca6a0553c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3587.1305643722085,
        "Y": 89.956935884564814
      },
      {
        "Name": "Color.ByARGB",
        "ShowGeometry": true,
        "Id": "a3eff922c21f488fb7b7482966fa2f40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3271.5084319575872,
        "Y": 311.78999824572634
      },
      {
        "Name": "Transparency",
        "ShowGeometry": true,
        "Id": "028c42939e3640aebc1247de08cb61d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2874.6565098067458,
        "Y": 311.78999824572634
      },
      {
        "Name": "Document.Current",
        "ShowGeometry": true,
        "Id": "e8cd46c1a5a144a8b4471206fc0a5170",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2473.8247516503793,
        "Y": -42.304226221775025
      },
      {
        "Name": "ScopeIf",
        "ShowGeometry": true,
        "Id": "d95dda1e8a4443638f211d336235bc2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4149.64425395678,
        "Y": 55.364676924327796
      },
      {
        "Name": "Show Corridor Solids?",
        "ShowGeometry": true,
        "Id": "0e05380c8af041c18b4abb658ad306e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3670.1305643722085,
        "Y": -341.98013162127427
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "593cdd848b354b74b27a6d40002e6fe7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3753.1305643722085,
        "Y": 254.21416010532437
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "125b92b664454420ae6e90fe3cdae59f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5383.09213458008,
        "Y": 1553.8805709309345
      },
      {
        "Name": "Document.BlockByName",
        "ShowGeometry": true,
        "Id": "7afccccc444248c98190051ba5bd155b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3152.7781355229031,
        "Y": 1759.9004676630207
      },
      {
        "Name": "Document.Current",
        "ShowGeometry": true,
        "Id": "00735837102a4ef8855d36386e956d7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2862.5572101051876,
        "Y": 1710.3051553352589
      },
      {
        "Name": "Excel File Path",
        "ShowGeometry": true,
        "Id": "ad8d596f1e99436a8fc282edce897284",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 117.00214597777995,
        "Y": 28.385619814562943
      },
      {
        "Name": "Sheet Name",
        "ShowGeometry": true,
        "Id": "7c2c0905881646b882a7b8498bbab958",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 135.00214597777995,
        "Y": 186.41139856557137
      },
      {
        "Name": "Align Block References Vertically?",
        "ShowGeometry": true,
        "Id": "bde1e13d2f2148f1947e5f2b488727a7",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3799.1285111479046,
        "Y": 2180.3661067186054
      },
      {
        "Name": "Data.OpenXMLImportExcel",
        "ShowGeometry": true,
        "Id": "7888b19ebfa249fab09caabc5b2a7a62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 398.84515937673154,
        "Y": 100.1792121042958
      }
    ],
    "Annotations": [
      {
        "Id": "eb3b841d548a4bf7ac5661562b649397",
        "Title": "Input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ad8d596f1e99436a8fc282edce897284",
          "7c2c0905881646b882a7b8498bbab958"
        ],
        "HasNestedGroups": false,
        "Left": 107.00214597777995,
        "Top": -44.614380185437057,
        "Width": 201.0,
        "Height": 363.02577875100849,
        "FontSize": 36.0,
        "InitialTop": 28.385619814562943,
        "InitialHeight": 452.05155750201686,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "5e9e696b64c344fd8147f6bf60819e11",
        "Title": "Excel column headers",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "41c0bc2ad4bf47ec98ebb8bccf17f8f6",
          "87b99aa33fe84570bfd18f91347aa8dd",
          "e6fa94e01f8b47029cae23672aac6cfc",
          "ce9009a97e3947ccb1f4f4cae7fd9cc4",
          "9a0faba306b949438914bd69080c8106",
          "694130ef86ed49e78594afdcf4f483db"
        ],
        "HasNestedGroups": false,
        "Left": 1618.2742202669456,
        "Top": 633.14417641502268,
        "Width": 169.0,
        "Height": 1500.216127145567,
        "FontSize": 36.0,
        "InitialTop": 793.14417641502268,
        "InitialHeight": 1353.216127145567,
        "TextblockHeight": 150.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "ef38d0c2fa2e4bf6ac9f40b0a8e22c70",
        "Title": "Get column values",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "580af4fd703d4e4987941bb807aafa32",
          "b254f1fea5b04033a1e554e22d886ff7",
          "a0b1c3ec90054b2c9d9f9776ffcff473",
          "558fae2b7f5e4d1d9f19cf657517830a",
          "8842eea1c75344df843c8e6b590a1b33",
          "d1c33bc03b4841258df31215c51a0e27"
        ],
        "HasNestedGroups": false,
        "Left": 2459.3258876227596,
        "Top": 641.62691135105217,
        "Width": 266.68982596578462,
        "Height": 1485.5825082517863,
        "FontSize": 36.0,
        "InitialTop": 757.62691135105217,
        "InitialHeight": 1352.5825082517863,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "0064fcf8fa6d4d46af54337b976e84b9",
        "Title": "Create dictionary from Excel data",
        "DescriptionText": "This group of nodes are a great example that you can re-use when working with other Excel datasets. Putting the data into a dictionary gives you the flexibility to change the order of the columns in Excel without breaking the Dynamo graph.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "296c4fdad3dc459d8791cf6e29c74825",
          "6356610007ea447492242e2331d1ddc8",
          "7f4d2326a42c4203bab6903c402e0973",
          "29ec5226dce847cc96f4770a2fbeae33",
          "99ef765fcfef42fd8cd254f542329342",
          "7a2e7ab2503349819c05c5507f33c111",
          "08f311f3dc1b4aa59a267353b12b568e",
          "f9a18e10fd7048ea8aadcad1946f7e45"
        ],
        "HasNestedGroups": false,
        "Left": 765.0755747772871,
        "Top": -89.308005102905184,
        "Width": 1036.1986454896585,
        "Height": 666.79819876156432,
        "FontSize": 36.0,
        "InitialTop": -7.3080051029051845,
        "InitialHeight": 597.79819876156432,
        "TextblockHeight": 72.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "5c307fc0aaea4561b6f1f504ef46920a",
        "Title": "Import Excel data",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7888b19ebfa249fab09caabc5b2a7a62",
          "6188978ed7784bc0a90d924b39a36767"
        ],
        "HasNestedGroups": false,
        "Left": 385.84515937673154,
        "Top": -51.8207878957042,
        "Width": 300.0,
        "Height": 419.0,
        "FontSize": 36.0,
        "InitialTop": 21.1792121042958,
        "InitialHeight": 184.65076177307566,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "9b950cb102cd44929c2ebbc57f1eff21",
        "Title": "Visualize corridor solids",
        "DescriptionText": "These nodes are only here to provide more context in Dynamo. They don't have any effect on the rest of the graph's functionality.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a295a30f98ea4b32b0e1a124bfaf99c8",
          "764ad02cb9af46048f4e17ef512dfd94",
          "991940503451454e84deef55666db580",
          "af8d9f363c2c4e829abe83aca6a0553c",
          "a3eff922c21f488fb7b7482966fa2f40",
          "028c42939e3640aebc1247de08cb61d3",
          "e8cd46c1a5a144a8b4471206fc0a5170",
          "d95dda1e8a4443638f211d336235bc2c",
          "593cdd848b354b74b27a6d40002e6fe7",
          "5601e2ea16b94610b0049e35c0747930"
        ],
        "HasNestedGroups": false,
        "Left": 2463.8247516503793,
        "Top": -183.6353230756722,
        "Width": 1909.8195023064004,
        "Height": 727.42532132139854,
        "FontSize": 36.0,
        "InitialTop": -110.6353230756722,
        "InitialHeight": 567.42532132139854,
        "TextblockHeight": 63.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "55db3cab1c41424ba5422d1cad3dd295",
        "Title": "Visualize corridor feature lines",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "65fe3ccff9154c079e5e84eb10d6c8ca",
          "e76d38c9cfe6474fad5767c30d8aa6dd"
        ],
        "HasNestedGroups": false,
        "Left": 4289.7395517435525,
        "Top": 667.12371797351284,
        "Width": 321.0,
        "Height": 327.0,
        "FontSize": 36.0,
        "InitialTop": 783.12371797351284,
        "InitialHeight": 224.0,
        "TextblockHeight": 106.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "28fc95cb60514e7d9ab2fec46f1c53e0",
        "Title": "Input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0e05380c8af041c18b4abb658ad306e2",
          "37b786f059f24a8c8e8cfd01a41a369c"
        ],
        "HasNestedGroups": false,
        "Left": 3628.6305643722085,
        "Top": -522.98013162127427,
        "Width": 320.0,
        "Height": 313.0,
        "FontSize": 36.0,
        "InitialTop": -449.98013162127427,
        "InitialHeight": 253.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "14a85c6630304b49845e2aba719abf92",
        "Title": "Get the corridor feature lines",
        "DescriptionText": "These nodes are getting the corridors, baselines, and feature lines within them using the values that we defined in the Excel file.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dfb4b579583a4afbba2130623cfcd960",
          "1447baf762ed4b769f6d2050ff1a1a5f",
          "e6ea97a585eb4cd899e8759d1fd9736d",
          "0bfb16ba54d3472d8dad166e01061456"
        ],
        "HasNestedGroups": false,
        "Left": 2783.3688323348356,
        "Top": 687.09560124905806,
        "Width": 1343.0698528472844,
        "Height": 572.25565993516625,
        "FontSize": 36.0,
        "InitialTop": 760.09560124905806,
        "InitialHeight": 482.25565993516625,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "5ce7a9db866f46f2a158351fe5363a8c",
        "Title": "Get the block definitions",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7afccccc444248c98190051ba5bd155b",
          "00735837102a4ef8855d36386e956d7a"
        ],
        "HasNestedGroups": false,
        "Left": 2852.5572101051876,
        "Top": 1637.3051553352589,
        "Width": 567.22092541771553,
        "Height": 284.5953123277618,
        "FontSize": 36.0,
        "InitialTop": 1710.3051553352589,
        "InitialHeight": 194.5953123277618,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "c57b9425aca74d618db24917bfc81594",
        "Title": "Get coordinate systems along corridor feature line",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5cf517582cd94b8e9865e587c7d502af",
          "eb4cd69e2ef8474897eaeddc51784bfb",
          "125b92b664454420ae6e90fe3cdae59f",
          "5a3f2d8eac154df9aeda87075a911dd4",
          "a885fe48076549039805e23d548939c7",
          "fc21b1817176490a945c524115d418e5"
        ],
        "HasNestedGroups": false,
        "Left": 4298.4293777093371,
        "Top": 1117.0781657296166,
        "Width": 1527.6627568707427,
        "Height": 680.79257332069074,
        "FontSize": 36.0,
        "InitialTop": 1190.0781657296166,
        "InitialHeight": 543.79257332069074,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "7d50368a272e425080fb3d17f498dc9f",
        "Title": "Create the block references",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ecd584ae27ee45d184dc3a8851fbea23",
          "973f7487d33c447db3f252c149972865",
          "0c665060d3e2429f97dec73d6bc7fbe7"
        ],
        "HasNestedGroups": false,
        "Left": 5301.6650695151093,
        "Top": 1831.1265680564545,
        "Width": 1115.2563587848017,
        "Height": 385.94352450149995,
        "FontSize": 36.0,
        "InitialTop": 1904.1265680564545,
        "InitialHeight": 329.61525598499,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "5dfe9b6e5da7484faf3717c0d4ae58be",
        "Title": "Input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bde1e13d2f2148f1947e5f2b488727a7"
        ],
        "HasNestedGroups": false,
        "Left": 3789.1285111479046,
        "Top": 2107.3661067186054,
        "Width": 346.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "InitialTop": 2180.3661067186054,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "37b786f059f24a8c8e8cfd01a41a369c",
        "Title": "Set this to 'True' if you want to display the corridor solids in Dynamo. Note that this will make the graph run slower, and solids will only be displayed if they have been extracted from the corridor and are already present in Model Space.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3638.6305643722085,
        "Top": -449.98013162127427,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "0e05380c8af041c18b4abb658ad306e2"
      },
      {
        "Id": "5601e2ea16b94610b0049e35c0747930",
        "Title": "This is a cool node. It will only run the node connected to the 'true' port (and all of its upstream nodes) if the test condition is met. This is a great way to selectively run different parts of the graph. \n\nIMPORTANT\nThe 'true' and 'false' branches should be totally independent and not connected to any other nodes in the graph that you always want to run.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4065.6442539567793,
        "Top": -110.6353230756722,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "d95dda1e8a4443638f211d336235bc2c"
      },
      {
        "Id": "e76d38c9cfe6474fad5767c30d8aa6dd",
        "Title": "This just helps visualize the corridor feature lines in Dynamo and doesn't have any effect on the rest of the graph.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4303.7395517435525,
        "Top": 783.12371797351284,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "65fe3ccff9154c079e5e84eb10d6c8ca"
      },
      {
        "Id": "5a3f2d8eac154df9aeda87075a911dd4",
        "Title": "Here we are getting the offset and elevation of the corridor feature line at each station. We'll use the offset value to figure out if we need to rotate the block references or not. ",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4892.3064721735554,
        "Top": 1190.0781657296166,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "eb4cd69e2ef8474897eaeddc51784bfb"
      },
      {
        "Id": "a885fe48076549039805e23d548939c7",
        "Title": "This may look a little confusing, but the goal is simple. If the corridor feature line is right of the baseline (i.e., positive offset), then we want to rotate the coordinate system by 180 degrees. Otherwise we don't rotate. The syntax that you see here follows this pattern:\n\n(condition) ? (do this if true) : (do this if false)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5450.09213458008,
        "Top": 1402.8805709309345,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "125b92b664454420ae6e90fe3cdae59f"
      },
      {
        "Id": "fc21b1817176490a945c524115d418e5",
        "Title": "This gives us coordinate systems along the corridor feature line at the stations where we want to place the block references. A coordinate system is kind of an abstract concept, but it's basically just an origin point with an X, Y, and Z axis. You can read more about this on the Primer, and use the background preview in Dynamo to see what the coordinate systems look like.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4378.9293777093371,
        "Top": 1437.8707390503073,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "5cf517582cd94b8e9865e587c7d502af"
      },
      {
        "Id": "7a2e7ab2503349819c05c5507f33c111",
        "Title": "We're assuming here that the first row of data that we get from Excel will be column headers, which we can use as the 'keys' in the dictionary.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 935.31873065270224,
        "Top": 21.691994897094816,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "296c4fdad3dc459d8791cf6e29c74825"
      },
      {
        "Id": "08f311f3dc1b4aa59a267353b12b568e",
        "Title": "Here we want to separate the column headers from the rest of the data. So we simply remove the first item from the list.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 935.70618654823852,
        "Top": 266.86322406753823,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "6356610007ea447492242e2331d1ddc8"
      },
      {
        "Id": "f9a18e10fd7048ea8aadcad1946f7e45",
        "Title": "A dictionary is simply a set of key-value pairs, just like how you would look up a word (key) in a language dictionary to gets its definition (value). Check out the Dynamo Primer online for more information.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1505.2742202669456,
        "Top": -7.3080051029051845,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "99ef765fcfef42fd8cd254f542329342"
      },
      {
        "Id": "6188978ed7784bc0a90d924b39a36767",
        "Title": "It is recommend to use this node instead of the Data.ImportExcel node because it provides more consistent behavior.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 395.84515937673154,
        "Top": 21.1792121042958,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "7888b19ebfa249fab09caabc5b2a7a62"
      }
    ],
    "X": 4.83212480121157,
    "Y": 246.30800475201715,
    "Zoom": 0.21510609902461189
  }
}