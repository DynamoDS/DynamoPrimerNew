{
  "Uuid": "1e7f6776-a967-4335-bb0c-6d88c54175c2",
  "IsCustomNode": false,
  "Description": "Creates a text grid of cut/fill values between two surfaces, with an option to generate earthwork solids.",
  "Name": "Land_Earthwork",
  "ElementResolver": {
    "ResolutionMap": {
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "TinSurface": {
        "Key": "Autodesk.Civil.DynamoNodes.TinSurface",
        "Value": "Civil3DNodes.dll"
      },
      "DSCore.Object": {
        "Key": "DSCore.Object",
        "Value": "DSCoreNodes.dll"
      },
      "Autodesk.Object": {
        "Key": "Autodesk.AutoCAD.DynamoNodes.Object",
        "Value": "AutoCADNodes.dll"
      },
      "Autodesk.AutoCAD.DynamoNodes.Object": {
        "Key": "Autodesk.AutoCAD.DynamoNodes.Object",
        "Value": "AutoCADNodes.dll"
      },
      "GeometryColor": {
        "Key": "Modifiers.GeometryColor",
        "Value": "GeometryColor.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "98fa0984a3cc4aa6a43c45f2d52dedbc",
      "Name": "Number of Digits for Rounding",
      "Type": "number",
      "Type2": "number",
      "Value": "2",
      "MaximumValue": 6.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "Produces integer values",
      "SelectedIndex": 0
    },
    {
      "Id": "182284863b1647d7a706377808c6103d",
      "Name": "Cut/Fill Text Layer",
      "Type": "string",
      "Type2": "string",
      "Value": "C-GRAD-ANNO",
      "Description": "Creates a string",
      "SelectedIndex": 0
    },
    {
      "Id": "e4e76f817b444d67b41c55eb9802312d",
      "Name": "Text Height",
      "Type": "number",
      "Type2": "number",
      "Value": "1",
      "NumberType": "Double",
      "Description": "Creates a number",
      "SelectedIndex": 0
    },
    {
      "Id": "ce044582915c42c99242fb0b38300776",
      "Name": "Text Grid X Spacing",
      "Type": "number",
      "Type2": "number",
      "Value": "10",
      "NumberType": "Double",
      "Description": "Creates a number",
      "SelectedIndex": 0
    },
    {
      "Id": "6b64a8e5eed04dc9bb5facf4fae94160",
      "Name": "Text Grid Y Spacing",
      "Type": "number",
      "Type2": "number",
      "Value": "10",
      "NumberType": "Double",
      "Description": "Creates a number",
      "SelectedIndex": 0
    },
    {
      "Id": "e0e80c23029540f283e97cba6e1dbf0f",
      "Name": "Select Base Surface",
      "Type": "selection",
      "Type2": "hostSelection",
      "Value": "118AC",
      "Description": "Select object in the current document.",
      "SelectedIndex": 0
    },
    {
      "Id": "74ee82fcea1f40f4800137b459277b6c",
      "Name": "Select Comparison Surface",
      "Type": "selection",
      "Type2": "hostSelection",
      "Value": "118AD",
      "Description": "Select object in the current document.",
      "SelectedIndex": 0
    },
    {
      "Id": "101e531f99b443b5b4736441094b3bb9",
      "Name": "Solids Layer",
      "Type": "string",
      "Type2": "string",
      "Value": "C-GRAD-SLD",
      "Description": "Creates a string",
      "SelectedIndex": 0
    },
    {
      "Id": "39f64fc1befa4b399391f7aa4bc83602",
      "Name": "Create Cut/Fill Solids?",
      "Type": "boolean",
      "Type2": "boolean",
      "Value": "false",
      "Description": "Enables selection between True and False",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "81b738ccdff14ad390d124277446ae04",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6814fdd5f5b6402daf21ce735161bae8",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f9d00d8df7249cbbd3f01c4b4ec0152",
          "Name": "plane",
          "Description": "The plane on which to pull the curve\n\nPlane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aab1cb1237ee4f7b94ab3b28d9a7ec9a",
          "Name": "Curve",
          "Description": "A Curve on the Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PullOntoPlane@Autodesk.DesignScript.Geometry.Plane",
      "Replication": "Auto",
      "Description": "Create a curve by pulling onto plane\n\nCurve.PullOntoPlane (plane: Plane): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f000fe20820444fa8bae00953fcb609c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "53a65c86252c4bb38c3f9195986a21f5",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e367e85036234f5b93924476512ebeb4",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "217a18c2971f40e5baf4261cd4804a39",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5adc8ed229354f838de00a2508c768e8",
          "Name": "Plane",
          "Description": "Plane at XY plane of world",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.XY",
      "Replication": "Auto",
      "Description": "Creates a plane in the world XY\n\nPlane.XY ( ): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8bb8123acf4c45a489680159a6410f37",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1c813046dccc4731884afe685c36bab0",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77fd97ddd71244e19294194eab1a0e6d",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d7c803e19c61454f88cbe78a62f2149d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "da0609b2925d419c939507c6a60eeef4",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1193f754313c4aaf8c5c81e49fb9bab3",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f1ae002e6d14fff85377414d52169cf",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Replication": "Auto",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6241181f0db84d45908c23d52b542d45",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e33b50828b5b4316bafdbacb7ab6b1bf",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1091d8fbcaa540e4ad74abd10a7dc6f7",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "64424e02f08f4c9dae6078fe0c46ab27",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5cb2b25e680a4ef3848e9c2f65a56e27",
          "Name": "geom",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07f0b740bffd4e70ab86e9052c8723e1",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry@Autodesk.DesignScript.Geometry.Geometry[]",
      "Replication": "Auto",
      "Description": "Create an axis-aligned BoundingBox around input Geometry.\n\nBoundingBox.ByGeometry (geom: Geometry[]): BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "395b3707797b4d42b4b694e1fd1a24f0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1e9bee532bde4e20a7b9c05444d0a228",
          "Name": "boundingBox",
          "Description": "Autodesk.DesignScript.Geometry.BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa5f6cd0413044228248eeabf8478034",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.MinPoint",
      "Replication": "Auto",
      "Description": "The minimum point\n\nBoundingBox.MinPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "18c2b5ebbbbd4e8cb4a8767fec6802bf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1a7e9b365e1c4801bd5a3b18460ea94d",
          "Name": "boundingBox",
          "Description": "Autodesk.DesignScript.Geometry.BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "337489e79029480098471a31742b1a23",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.MaxPoint",
      "Replication": "Auto",
      "Description": "The maximum point\n\nBoundingBox.MaxPoint: Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Range, CoreNodeModels",
      "Id": "76548b57e5064c92a00b1ac79542b903",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "c8376e41d2e8486b9b93824974463d31",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7216c0288c274ec2aee4198f8fc3bae5",
          "Name": "end",
          "Description": "Number or letter to end the sequence at\r\nDefault value: 9",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9f92cd49308402983223a4600b3b50c",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fac96c1d9b314e20b44b04064261070c",
          "Name": "list",
          "Description": "New list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers or letters in the given range"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9ba7c786605c43ad9b6544ce708bf4fc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "066b8ddfb56f4091978605801fa68bfe",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6e6f20bfe74416786173d573269e1fc",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "43ee04aa38f747eca1cc0d40d7d09a01",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4ef71fdfcc924b2badc6d0258239e46c",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab73b23a65e34d30b61d5d506900a649",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c7f4f266bf514d29a008b44aa7b38665",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4b02a789e7c44472a650eb67bd7579db",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b690557092ea49809da0f810eba56cb6",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e761986253544c738359ed757eeabc12",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double",
      "Replication": "CrossProduct",
      "Description": "Form a Point in the XY plane given two 2 cartesian coordinates. The Z component is 0.\n\nPoint.ByCoordinates (x: double = 0, y: double = 0): Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Range, CoreNodeModels",
      "Id": "80b7b9c303e147e1b328825e1739f917",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "21d493be77a444628b10a76f960f0773",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67ac5e50178b49348b6dd1b0ea129d03",
          "Name": "end",
          "Description": "Number or letter to end the sequence at\r\nDefault value: 9",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d2de2e904844d21b1473ddd4614e55c",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c94284595f9c4b9d86bc6e34949bd71c",
          "Name": "list",
          "Description": "New list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers or letters in the given range"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "da00b8b4a9dd44aa9489e08dcbf35ff0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "db5d1c0a11da4e14a8fdceff48fc9372",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b25e5467fcb5407b841f56918983e3e3",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a38f0ee68ea44578bbe141444ff79431",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8205d9dac4f840ab940d48bb58b0f2e5",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "145adea5dc8945f69ad04860fa0c252f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "efb3f7592a71449c854fa06071c67ba1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f357089df2ad4e22bed8a422cf84558d",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e137b3e3f9bb410e9382bb61d1e59253",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef32a8fe315b47209e27c13b56d8856e",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "22dcc49e711b4761b51cac051b5925da",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "002ef1ce215146819ba942b87e0b4e0c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2973a33e5c4e4be6b786ceaabe27b1f2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e89216eab0f54dd8b79489a27a20bfcd",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "056ee4e241a84acfbf8fa4b3b9b4df99",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c00645429f224272802d2869747b82af",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1faf1827e3c34c0ca7dcc5a502ed1900",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77e6775a91ab40efa2dd6ddefc77b75a",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e636d80d8d0d42ec8e0d09388db65044",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 206,
        "G": 1,
        "B": 1,
        "A": 255
      },
      "Id": "2bda922f9dd14cc7b47c2825faeeeaf5",
      "NodeType": "ColorInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e8fe341b09a4c74a8dbcb556f79f15c",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 0,
        "G": 153,
        "B": 4,
        "A": 255
      },
      "Id": "92f9a46921c94757b43f6650fb27e492",
      "NodeType": "ColorInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bde7ab7f24b848b88ca953b7d1bb0930",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "edd9c2cf13c6452fb3e5533341a31605",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "6628f12431ce4017b7049d0451218bad",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0edb56a995114dd7b87794d3edeaf56c",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d38cf1c85ba4908ace1c15c92c8cce1",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fcdf185c25034aa3b1eed83a23984e54",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0758bf973a8d42738e9200db04020de7",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3dce343d342949a49d152821d1172762",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0055620b89347b6acd84ff83bde504a",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 6,
      "MinimumValue": 1,
      "StepValue": 1,
      "Id": "98fa0984a3cc4aa6a43c45f2d52dedbc",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e168d6aa0154208a1e17017cd9e89c3",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 2
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fd10391cf4d54a0ca94b5ff6d17360e6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3ce878b72db6498786cab2515031be38",
          "Name": "text",
          "Description": "text\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e73ced4ade6f4bfa992a203b1490ad76",
          "Name": "insertionPoint",
          "Description": "A Dynamo Point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5750d3778458435ebd0b9baa2c29c7f4",
          "Name": "height",
          "Description": "Text Height\n\ndouble\nDefault value : 0.5",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a528a94fe95e46f0a0f4bd9f821919da",
          "Name": "rotation",
          "Description": "Rotation in decimal degrees\n\nVector\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ae1260a31034021b7673c6936be6bdf",
          "Name": "horizontalMode",
          "Description": "HorizontalMode\n\nstring\nDefault value : \"Left\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1566a0a693a94b9798f1b69c3bb46031",
          "Name": "verticalMode",
          "Description": "verticalMode\n\nstring\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fec78f3ce654a52ac98eb8cae7b9a46",
          "Name": "layer",
          "Description": "The layer for the Object. The default is the current Document's current Layer.\n\nstring\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f230b607252401d8495ec6b4edd919f",
          "Name": "block",
          "Description": "The block to add the Object to. The default is the current Document's ModelSpace\n\nBlock\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6162c65f15024693b6785c681834146f",
          "Name": "DBText",
          "Description": "Text",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.DBText.Create@string,Autodesk.DesignScript.Geometry.Point,double,Autodesk.DesignScript.Geometry.Vector,string,string,string,Autodesk.AutoCAD.DynamoNodes.Block",
      "Replication": "Auto",
      "Description": "Create AutoCAD text from a string of text.\n\nDBText.Create (text: string, insertionPoint: Point, height: double = 0.5, rotation: Vector = null, horizontalMode: string = \"Left\", verticalMode: string = \"\", layer: string = null, block: Block = null): DBText"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "dddf211b1b9d44ac9a64baedf3a788bb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5003e63fdae84a618bf03f5befaa15fa",
          "Name": "string",
          "Description": "String to take substring of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7f7d32987512446587f5e57eb784dd4d",
          "Name": "startIndex",
          "Description": "Starting character position of the substring in the original string\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b74d1df48ed94c28a4b56e1713347250",
          "Name": "length",
          "Description": "Number of characters in the substring\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ac4cbc3e12f451395eab60d2beca7f5",
          "Name": "string",
          "Description": "Substring made from the original string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Substring@string,int,int",
      "Replication": "Auto",
      "Description": "Retrieves a substring from the given string. The substring starts at the given character position and has the given length.\n\nString.Substring (string: string, startIndex: int, length: int): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "68810fc8baa948859f6bed938f7b4050",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "50157a8765e74b80a18db3240c63cf30",
          "Name": "str",
          "Description": "str",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e66aa4d0010473cac03f47a0a84880a",
          "Name": "digits",
          "Description": "digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44a010d13a7e46088ad5c0df7d0edd1e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f94902c716864acb8953799451261059",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0;\nString.IndexOf(str, \".\") + digits + 1;"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "Id": "b5ff5c5c6d7d4063bc367e729a013ea2",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "697dd938db8446bba693c2fb55883aa1",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "192dc701c5894cf99ce83e710ef9e737",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Converts an object to a string representation"
    },
    {
      "ConcreteType": "Autodesk.AutoCAD.DynamoNodes.VerticalMode, AutoCADNodesUI",
      "SelectedIndex": 1,
      "SelectedString": "Middle",
      "Id": "9ce2bf6b4d86416f8976edbb11285a34",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4005329fc6dc41bba5d6e824bde1dd56",
          "Name": "Vertical Mode",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Set Vertical mode for a Text Create node."
    },
    {
      "ConcreteType": "Autodesk.AutoCAD.DynamoNodes.HorizontalMode, AutoCADNodesUI",
      "SelectedIndex": 1,
      "SelectedString": "Center",
      "Id": "4598b5def549483ea58dcaef0a464b87",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "22d12642b6d84edca859efb9becb23a9",
          "Name": "Horizontal Mode",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Set Horizontal mode for a Text Create node."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "182284863b1647d7a706377808c6103d",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b437cd095904b809b31c623d6f5e4b7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "C-GRAD-ANNO"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "82cba9ddf5984202925a7864695a0722",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3f3348decef94d1faa3c11f41e84ef03",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0dacea8bcc648bbafa84cd9b9e73f46",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33e2421f3e8b46e791d955c584231762",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e178794ec5848d69b0e3fd78909e88c",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7cb957cec9734ed8a4d12ae2aee9535e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d0acad84c5984f9cb3cd1a0a8ca6a79b",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "248988c91be745d6b89682f54c56c397",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ba334e2e6b34d74ae46c020c3ce735f",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "0b5b4517be4b4d41b682ec96942dcd26",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91ac6b4fd6bf48fba59ae3bca0a42292",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 0.0
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4cbfbb1e7c144a5981ca8222bf77594a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cdfccf3a0d1c4336ac1a704fdae67914",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3e235f344d749d086d8013f200aa993",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e416e228d5a541d0adbfa8a64c31fb82",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c64fab7e31244858b838fe6d2541f3b",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "422cdbe6e7d844f7aeb809254dc19987",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4438f3c2c8fc4a44b51421cad1959dc5",
          "Name": "object",
          "Description": "Autodesk.AutoCAD.DynamoNodes.Object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38edab6a1b624fbea102a4671c78c627",
          "Name": "value",
          "Description": "The new Color\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63120c02b66b4713b0ae501752fc7359",
          "Name": "Object",
          "Description": "An AutoCAD Object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Object.SetColor@DSCore.Color",
      "Replication": "Auto",
      "Description": "Sets the Color of the AutoCAD Object.\n\nObject.SetColor (value: Color): Object"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "e4e76f817b444d67b41c55eb9802312d",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a712ef6cc78d45c4ad05ca64748b1a20",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 1.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "ce044582915c42c99242fb0b38300776",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52018f477cf6401db734ed12e328b18d",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 10.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "6b64a8e5eed04dc9bb5facf4fae94160",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c8865c4da51e41298a8dbf8db6dff725",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 10.0
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "68b01491cc964dfd93e65863229bd103",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "869cf0a0c7544d73aafc65e386723f75",
          "Name": "object",
          "Description": "Autodesk.AutoCAD.DynamoNodes.Object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f1e57b30f91489c9b4480078a5319ce",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Object.Delete",
      "Replication": "Auto",
      "Description": "Delete this object.\n\nObject.Delete ( ): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "c9eeb5144a6c4e39b736ed7d87f38f4a",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "b1e897cb6f49452f9febefc802ccaf18",
          "Name": "passThrough",
          "Description": "passThrough",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5892b744148446ba030e1a8ea47ec72",
          "Name": "waitFor",
          "Description": "waitFor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5d0e76398c7474b9ef2f988219aac5c",
          "Name": "",
          "Description": "Value of expression at line 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "// This simply creates a list and then gets the first item in the list.\n// It could be rewritten as:\n// List.FirstItem(passThrough, waitFor);\n// Or you could even simplify it further and just do:\n// [a,b][0];\n// This acts as a gate because Dynamo has to “collect” all of the items\n// in the list before passing the contents on to the next node.\n\n[passThrough, waitFor][0];"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "4ab3b42b7f934710a4fbe19b746a6af9",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3ba36461915a43209e5109d7e5965456",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66c60da53e4f49f58879d3edf21442a5",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d69f3d63add431da3f38e5d9ec38e27",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a19af3678bfe4d66836cea6f02a26b42",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c78fa960f95e445fa5d8bc5ab5a24afb",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df274045133b47fdb602a687f9d6c044",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65be32e89f044275ab5018e9584920de",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "0902ebe950514791a17d71685ece0970",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6174b2c413a24771a33d88c774203f3f",
          "Name": "tinSurface",
          "Description": "Autodesk.Civil.DynamoNodes.TinSurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db30a0d694c644c0b05963aaa4918707",
          "Name": "Object[]",
          "Description": "The Objects defining the TinSurface border",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.TinSurface.ExtractBorder",
      "Replication": "Auto",
      "Description": "Extracts the objects defining the TinSurface border.\n\nTinSurface.ExtractBorder ( ): Object[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b4b1efca3072433c9d78743c1b58e898",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c02a18ca3a064bcbbac933e63da2e901",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a7031b14ec94585a70e428e79e250cf",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d3e95f3975904f7097a43266a4090674",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e337112609a7484bae2d4b2e18c5e4f2",
          "Name": "object",
          "Description": "Autodesk.AutoCAD.DynamoNodes.Object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "439697ed465f4bd18283dcf8aae0f013",
          "Name": "Geometry",
          "Description": "Dynamo Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Object.Geometry",
      "Replication": "Auto",
      "Description": "Get Dynamo representation of this object.\n\nObject.Geometry: Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9a31608ecda1486eb76d18c17722eb3d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3c3b2cd8c47b44d5bf7145cc6aef16c0",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3396c82a2f50490b909b9a7a4df02d13",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50a0db4ef4ac4e25ac599b8cce77f7a1",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Autodesk.AutoCAD.DynamoNodes.ObjectSelection, AutoCADNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "118AC"
      ],
      "Id": "e0e80c23029540f283e97cba6e1dbf0f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d9f1c0b8a44b44f798f02cd895b6ceb5",
          "Name": "Object",
          "Description": "Object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select object in the current document."
    },
    {
      "ConcreteType": "Autodesk.AutoCAD.DynamoNodes.ObjectSelection, AutoCADNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "118AD"
      ],
      "Id": "74ee82fcea1f40f4800137b459277b6c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2206d9c49e2044d38b9ce78f0b52d0ab",
          "Name": "Object",
          "Description": "Object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select object in the current document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9b157d12b15b4a4c964f6e06de3a1409",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8230a362b38a428f966947c91536df4e",
          "Name": "tinSurface",
          "Description": "Autodesk.Civil.DynamoNodes.TinSurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92f2975b6b2743178f0909bc70611ac1",
          "Name": "PolyCurve[]",
          "Description": "IList[DSPolyCurve]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.TinSurface.Triangles",
      "Replication": "Auto",
      "Description": "Get the triangles of the surface.\n\nTinSurface.Triangles: PolyCurve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1f3e1c34bd1a4399878e4fa128a406b1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d623331d4fae4f79baa78e5e92ccbd6a",
          "Name": "alpha",
          "Description": "Alpha value (between 0 and 255 inclusive)\n\nint\nDefault value : 255",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab875d2ac1a84e02b1047528e840338f",
          "Name": "red",
          "Description": "Red value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc1fccdc789e441589c35816d897c542",
          "Name": "green",
          "Description": "Green value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23f063349443460d90c33621a7850f76",
          "Name": "blue",
          "Description": "Blue value for RGB color model (between 0 and 255 inclusive)\n\nint\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d22262083884012adcfb162c83f73f1",
          "Name": "color",
          "Description": "Color created from ARGB",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Color.ByARGB@int,int,int,int",
      "Replication": "Auto",
      "Description": "Construct a color by alpha, red, green, and blue components.\n\nColor.ByARGB (alpha: int = 255, red: int = 0, green: int = 0, blue: int = 0): Color"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NumberType": "Integer",
      "MaximumValue": 255,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "7575a22c7c68491f9a274ce6b454f06c",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "98b397e2fec14e43870bfbcbc2c65725",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces integer values",
      "InputValue": 30
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "59ff27c216da4b7b9ab547700ab86392",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "733414128dd94caca00213a16d9766ac",
          "Name": "surface",
          "Description": "Autodesk.Civil.DynamoNodes.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4eafce44e72e4645a815d60ad28218a3",
          "Name": "point",
          "Description": "A Dynamo Point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "628e189a1a674d238d47c51cb028966d",
          "Name": "Point",
          "Description": "Dynamo Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Surface.SamplePoint@Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Get the Dynamo Point on a Surface from a Dynamo Point.\n\nSurface.SamplePoint (point: Point): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a14a07b6cb984744a9f7896d3a78165a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b5f6823e8a1a4403b4fb338f9c9e7366",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5304ea5f512473584e82a10accda94f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4dd9aa7645894965b09381c0517a7d68",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "944b854adafd466ea046d97aaf12fb67",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f02761050604d8fbb7db3707007710b",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b07f653d672c496d993cc175455db971",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e7f7246965504b00ae085d03d14c6d75",
          "Name": "surface",
          "Description": "Autodesk.Civil.DynamoNodes.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29e6a4a4e554488797178f90a6cfe26b",
          "Name": "point",
          "Description": "A Dynamo Point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f01c4c7fa1e5440fb44787e94669bca6",
          "Name": "Point",
          "Description": "Dynamo Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Surface.SamplePoint@Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Get the Dynamo Point on a Surface from a Dynamo Point.\n\nSurface.SamplePoint (point: Point): Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "101e531f99b443b5b4736441094b3bb9",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd8e709aeebc4743a2ac55c5441a47d6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "C-GRAD-SLD"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "39f64fc1befa4b399391f7aa4bc83602",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1efc375cb3074850a6ff338f4e9e1015",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "11bde97edc904cfaa780ae17a12518c5",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca5823857a9d4690958bba2690605440",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"\nimport sys\nimport clr\n\nclr.AddReference('ProtoGeometry')\nclr.AddReference('GeometryColor')\n\nfrom Autodesk.DesignScript.Geometry import *\nfrom Modifiers import GeometryColor\nfrom Autodesk.AutoCAD.DynamoNodes import *\nfrom Autodesk.Civil.DynamoNodes import *\n\n# Inputs\ncreate_solids = IN[0]\ncomparison = IN[1]\nbase = IN[2]\nlayer = IN[3]\ncolors = IN[4]\n\n# By default, the node will just output False if we don't want to create the solids\noutput = False\n\n# If the toggle is set to true...\nif create_solids:\n\t# Create an empty list for the output\n\toutput = []\n\n\t# Generate the AutoCAD solids\n\tautocad_solids = TinSurface.CreateSolidsAtSurface(comparison, base, layer, \\\"\\\")\n\n\t# Loop through each solid\n\tfor i in range(0, len(autocad_solids)):\n\t\tsolid = autocad_solids[i]\n\t\tcolor = colors[i]\n\n\t\t# Set the color of the solid\n\t\tObject.SetColor(solid, color)\n\n\t\t# Get the solid's geometry in Dynamo space\n\t\tdyn_solid = solid.Geometry\n\n\t\t# Colorize the Dynamo solid\n\t\tcolored_solid = GeometryColor.ByGeometryColor(dyn_solid, color)\n\n\t\t# Add the colored solid to our output\n\t\toutput.append(colored_solid)\n\nOUT = output\n\";"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "0ae790a0ca144c29837a28d64a00aa81",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "3ed269927d1e4088801ec15852bb3b84",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a0e1f0ebf4b4fcda64d8801276286a9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3391d13702234ccfb3f7fe91d0d13a19",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "078ceca9538445b587d6177c235ad29f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afe62e17ca314cd680a3e4313ad601cb",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3b4cdc9c037405d82eb91d7d96ba502",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7968a4ec684455c823ddf958a0c432b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    }
  ],
  "Connectors": [
    {
      "Start": "aab1cb1237ee4f7b94ab3b28d9a7ec9a",
      "End": "1c813046dccc4731884afe685c36bab0",
      "Id": "4382ff52197049f7a5e74a65d64a8ba1",
      "IsHidden": "False"
    },
    {
      "Start": "e367e85036234f5b93924476512ebeb4",
      "End": "da0609b2925d419c939507c6a60eeef4",
      "Id": "c4265ecfd5dc41458e996538c72ae065",
      "IsHidden": "False"
    },
    {
      "Start": "5adc8ed229354f838de00a2508c768e8",
      "End": "2f9d00d8df7249cbbd3f01c4b4ec0152",
      "Id": "7387b9760bf24a2e990c6d40138f0019",
      "IsHidden": "False"
    },
    {
      "Start": "77fd97ddd71244e19294194eab1a0e6d",
      "End": "53a65c86252c4bb38c3f9195986a21f5",
      "Id": "28140bd15ce04279af7e454ade0bb8cb",
      "IsHidden": "False"
    },
    {
      "Start": "77fd97ddd71244e19294194eab1a0e6d",
      "End": "c02a18ca3a064bcbbac933e63da2e901",
      "Id": "29026aebbe3f44bb9afcc3f8582aa371",
      "IsHidden": "False"
    },
    {
      "Start": "6f1ae002e6d14fff85377414d52169cf",
      "End": "e33b50828b5b4316bafdbacb7ab6b1bf",
      "Id": "37284f8161ef4893ae5fb93dfe1255cb",
      "IsHidden": "False"
    },
    {
      "Start": "1091d8fbcaa540e4ad74abd10a7dc6f7",
      "End": "5cb2b25e680a4ef3848e9c2f65a56e27",
      "Id": "eb2c8e65ae7745c79e2e109417ab589d",
      "IsHidden": "False"
    },
    {
      "Start": "1091d8fbcaa540e4ad74abd10a7dc6f7",
      "End": "f357089df2ad4e22bed8a422cf84558d",
      "Id": "af3299d82faf4406b0ac3ed2d528e75c",
      "IsHidden": "False"
    },
    {
      "Start": "07f0b740bffd4e70ab86e9052c8723e1",
      "End": "1e9bee532bde4e20a7b9c05444d0a228",
      "Id": "97e39533b37a41d59cb4758253770b55",
      "IsHidden": "False"
    },
    {
      "Start": "07f0b740bffd4e70ab86e9052c8723e1",
      "End": "1a7e9b365e1c4801bd5a3b18460ea94d",
      "Id": "052cd26b635040fe834da5654bb464cc",
      "IsHidden": "False"
    },
    {
      "Start": "aa5f6cd0413044228248eeabf8478034",
      "End": "4ef71fdfcc924b2badc6d0258239e46c",
      "Id": "2d9255101e824de8be8ea96ba5673cc7",
      "IsHidden": "False"
    },
    {
      "Start": "aa5f6cd0413044228248eeabf8478034",
      "End": "8205d9dac4f840ab940d48bb58b0f2e5",
      "Id": "d1a4b85cb7d344a0b0ae542bb301b1bf",
      "IsHidden": "False"
    },
    {
      "Start": "337489e79029480098471a31742b1a23",
      "End": "066b8ddfb56f4091978605801fa68bfe",
      "Id": "38d0e59868464cdf956dc92317fac63f",
      "IsHidden": "False"
    },
    {
      "Start": "337489e79029480098471a31742b1a23",
      "End": "db5d1c0a11da4e14a8fdceff48fc9372",
      "Id": "efa8b766dfa24d1b9bba6f128e3d7726",
      "IsHidden": "False"
    },
    {
      "Start": "fac96c1d9b314e20b44b04064261070c",
      "End": "4b02a789e7c44472a650eb67bd7579db",
      "Id": "1f866d1f530541408c82631a217b2f46",
      "IsHidden": "False"
    },
    {
      "Start": "e6e6f20bfe74416786173d573269e1fc",
      "End": "7216c0288c274ec2aee4198f8fc3bae5",
      "Id": "bd486799c7ff471d9f4f497b9c31cc1c",
      "IsHidden": "False"
    },
    {
      "Start": "ab73b23a65e34d30b61d5d506900a649",
      "End": "c8376e41d2e8486b9b93824974463d31",
      "Id": "beb598d889994657a261b2338bfbbd34",
      "IsHidden": "False"
    },
    {
      "Start": "e761986253544c738359ed757eeabc12",
      "End": "002ef1ce215146819ba942b87e0b4e0c",
      "Id": "ebb59e45e7a745a0bddcccdba113befd",
      "IsHidden": "False"
    },
    {
      "Start": "c94284595f9c4b9d86bc6e34949bd71c",
      "End": "b690557092ea49809da0f810eba56cb6",
      "Id": "ba28bbda0da840338422a5bb83576ed4",
      "IsHidden": "False"
    },
    {
      "Start": "b25e5467fcb5407b841f56918983e3e3",
      "End": "67ac5e50178b49348b6dd1b0ea129d03",
      "Id": "42fad4775aa24775a5493d2b8e6aa4c3",
      "IsHidden": "False"
    },
    {
      "Start": "145adea5dc8945f69ad04860fa0c252f",
      "End": "21d493be77a444628b10a76f960f0773",
      "Id": "cc63f0208af24069ae710b504b9df8c6",
      "IsHidden": "False"
    },
    {
      "Start": "ef32a8fe315b47209e27c13b56d8856e",
      "End": "1faf1827e3c34c0ca7dcc5a502ed1900",
      "Id": "419b81fa14f14cbb84eff4485bc38466",
      "IsHidden": "False"
    },
    {
      "Start": "e89216eab0f54dd8b79489a27a20bfcd",
      "End": "e137b3e3f9bb410e9382bb61d1e59253",
      "Id": "11f817e82b1740d5b94aef96419d9951",
      "IsHidden": "False"
    },
    {
      "Start": "e89216eab0f54dd8b79489a27a20bfcd",
      "End": "c00645429f224272802d2869747b82af",
      "Id": "721d9f6cb3264a9f8d8e2eb40c840886",
      "IsHidden": "False"
    },
    {
      "Start": "77e6775a91ab40efa2dd6ddefc77b75a",
      "End": "cdfccf3a0d1c4336ac1a704fdae67914",
      "Id": "9ff775ccad0348f6add756f1ec1927f5",
      "IsHidden": "False"
    },
    {
      "Start": "77e6775a91ab40efa2dd6ddefc77b75a",
      "End": "4eafce44e72e4645a815d60ad28218a3",
      "Id": "cbc9e9bdbb644a2b8ff3bdb1c5cc39e4",
      "IsHidden": "False"
    },
    {
      "Start": "77e6775a91ab40efa2dd6ddefc77b75a",
      "End": "29e6a4a4e554488797178f90a6cfe26b",
      "Id": "bbf6b5dec16a4bb395e7a4cd012ebcef",
      "IsHidden": "False"
    },
    {
      "Start": "8e8fe341b09a4c74a8dbcb556f79f15c",
      "End": "0edb56a995114dd7b87794d3edeaf56c",
      "Id": "6c8e01e81d2042419db02ce9bb295fbb",
      "IsHidden": "False"
    },
    {
      "Start": "bde7ab7f24b848b88ca953b7d1bb0930",
      "End": "6628f12431ce4017b7049d0451218bad",
      "Id": "9ea5dd43a6ce4613a1ced3050618e5fb",
      "IsHidden": "False"
    },
    {
      "Start": "9d38cf1c85ba4908ace1c15c92c8cce1",
      "End": "38edab6a1b624fbea102a4671c78c627",
      "Id": "14e41e1f0e404f83bb4cc1bb673d6a92",
      "IsHidden": "False"
    },
    {
      "Start": "9d38cf1c85ba4908ace1c15c92c8cce1",
      "End": "a3b4cdc9c037405d82eb91d7d96ba502",
      "Id": "c40c4b58cce640e3bb2a38d9a11a22ff",
      "IsHidden": "False"
    },
    {
      "Start": "c0055620b89347b6acd84ff83bde504a",
      "End": "3f3348decef94d1faa3c11f41e84ef03",
      "Id": "d3b090f936cc4d9ca80be0e1fb43b7a1",
      "IsHidden": "False"
    },
    {
      "Start": "c0055620b89347b6acd84ff83bde504a",
      "End": "d0acad84c5984f9cb3cd1a0a8ca6a79b",
      "Id": "0781940c8280424195cf22988f596b78",
      "IsHidden": "False"
    },
    {
      "Start": "8e168d6aa0154208a1e17017cd9e89c3",
      "End": "6e66aa4d0010473cac03f47a0a84880a",
      "Id": "0d3335d6c3594c378a3190b7734ba220",
      "IsHidden": "False"
    },
    {
      "Start": "6162c65f15024693b6785c681834146f",
      "End": "4438f3c2c8fc4a44b51421cad1959dc5",
      "Id": "93117895b3f741e298e15b86711e2b96",
      "IsHidden": "False"
    },
    {
      "Start": "7ac4cbc3e12f451395eab60d2beca7f5",
      "End": "3ce878b72db6498786cab2515031be38",
      "Id": "a248095483c74b598f27603ae048cd70",
      "IsHidden": "False"
    },
    {
      "Start": "44a010d13a7e46088ad5c0df7d0edd1e",
      "End": "7f7d32987512446587f5e57eb784dd4d",
      "Id": "cb77e97c67b34a7b86146ca98f57d10a",
      "IsHidden": "False"
    },
    {
      "Start": "f94902c716864acb8953799451261059",
      "End": "b74d1df48ed94c28a4b56e1713347250",
      "Id": "5ae2a8f475914d30bf5a941c6b43b9a3",
      "IsHidden": "False"
    },
    {
      "Start": "192dc701c5894cf99ce83e710ef9e737",
      "End": "5003e63fdae84a618bf03f5befaa15fa",
      "Id": "f0ef6076d00d460caf0c47e2e653058d",
      "IsHidden": "False"
    },
    {
      "Start": "192dc701c5894cf99ce83e710ef9e737",
      "End": "50157a8765e74b80a18db3240c63cf30",
      "Id": "98a8869a400a4e8193479a6ed0c592aa",
      "IsHidden": "False"
    },
    {
      "Start": "4005329fc6dc41bba5d6e824bde1dd56",
      "End": "1566a0a693a94b9798f1b69c3bb46031",
      "Id": "964f9f1d84684f068c35e2bec781d6ca",
      "IsHidden": "False"
    },
    {
      "Start": "22d12642b6d84edca859efb9becb23a9",
      "End": "8ae1260a31034021b7673c6936be6bdf",
      "Id": "cd5a8a80d180427c8144401cc6f22ba3",
      "IsHidden": "False"
    },
    {
      "Start": "1b437cd095904b809b31c623d6f5e4b7",
      "End": "3fec78f3ce654a52ac98eb8cae7b9a46",
      "Id": "3ddbbe4e34ef4fbc85655c4086bad371",
      "IsHidden": "False"
    },
    {
      "Start": "33e2421f3e8b46e791d955c584231762",
      "End": "697dd938db8446bba693c2fb55883aa1",
      "Id": "193f2c58dc694b8aa253e65c21d45a85",
      "IsHidden": "False"
    },
    {
      "Start": "8ba334e2e6b34d74ae46c020c3ce735f",
      "End": "c0dacea8bcc648bbafa84cd9b9e73f46",
      "Id": "4d806ccfffe74aa293999fc7f939608e",
      "IsHidden": "False"
    },
    {
      "Start": "8ba334e2e6b34d74ae46c020c3ce735f",
      "End": "a3e235f344d749d086d8013f200aa993",
      "Id": "35a1bfbfd53d48a8950a50d2dcc8dfec",
      "IsHidden": "False"
    },
    {
      "Start": "91ac6b4fd6bf48fba59ae3bca0a42292",
      "End": "248988c91be745d6b89682f54c56c397",
      "Id": "e0aa4c4f2a8d4bcf8939aba918327373",
      "IsHidden": "False"
    },
    {
      "Start": "e416e228d5a541d0adbfa8a64c31fb82",
      "End": "e73ced4ade6f4bfa992a203b1490ad76",
      "Id": "293c730c9aff4c338a3650a7cd626cd7",
      "IsHidden": "False"
    },
    {
      "Start": "a712ef6cc78d45c4ad05ca64748b1a20",
      "End": "5750d3778458435ebd0b9baa2c29c7f4",
      "Id": "fbb8f4f7c2054540a556625b4c35c048",
      "IsHidden": "False"
    },
    {
      "Start": "52018f477cf6401db734ed12e328b18d",
      "End": "e9f92cd49308402983223a4600b3b50c",
      "Id": "0f4244d1bf654663bf85995bcd5d4060",
      "IsHidden": "False"
    },
    {
      "Start": "c8865c4da51e41298a8dbf8db6dff725",
      "End": "6d2de2e904844d21b1473ddd4614e55c",
      "Id": "54ef996979d5444f802c6f7de5addd08",
      "IsHidden": "False"
    },
    {
      "Start": "c5d0e76398c7474b9ef2f988219aac5c",
      "End": "869cf0a0c7544d73aafc65e386723f75",
      "Id": "59542145157c474bb48dbe72db3375b2",
      "IsHidden": "False"
    },
    {
      "Start": "5d69f3d63add431da3f38e5d9ec38e27",
      "End": "6174b2c413a24771a33d88c774203f3f",
      "Id": "bce260880c7a4dbe9aae8f6f3509a717",
      "IsHidden": "False"
    },
    {
      "Start": "5d69f3d63add431da3f38e5d9ec38e27",
      "End": "8230a362b38a428f966947c91536df4e",
      "Id": "3a602c7701154d6ca4f490237c5c994c",
      "IsHidden": "False"
    },
    {
      "Start": "65be32e89f044275ab5018e9584920de",
      "End": "e337112609a7484bae2d4b2e18c5e4f2",
      "Id": "1562e2b294224935b4e0447a6827282c",
      "IsHidden": "False"
    },
    {
      "Start": "db30a0d694c644c0b05963aaa4918707",
      "End": "c78fa960f95e445fa5d8bc5ab5a24afb",
      "Id": "b09bded1e9db4d89902fafc7f45b183d",
      "IsHidden": "False"
    },
    {
      "Start": "db30a0d694c644c0b05963aaa4918707",
      "End": "b1e897cb6f49452f9febefc802ccaf18",
      "Id": "61db30ef655d47829e41405fa4a36273",
      "IsHidden": "False"
    },
    {
      "Start": "4a7031b14ec94585a70e428e79e250cf",
      "End": "1193f754313c4aaf8c5c81e49fb9bab3",
      "Id": "f07fc2ce4ef44090851a7c05f2a7d4e7",
      "IsHidden": "False"
    },
    {
      "Start": "439697ed465f4bd18283dcf8aae0f013",
      "End": "6814fdd5f5b6402daf21ce735161bae8",
      "Id": "3a41e7255f464f9c9395dc34f08ccac6",
      "IsHidden": "False"
    },
    {
      "Start": "439697ed465f4bd18283dcf8aae0f013",
      "End": "c5892b744148446ba030e1a8ea47ec72",
      "Id": "68d37749797b46fe9bad15fedc7668d6",
      "IsHidden": "False"
    },
    {
      "Start": "d9f1c0b8a44b44f798f02cd895b6ceb5",
      "End": "3ba36461915a43209e5109d7e5965456",
      "Id": "889cc5e484f34592b4ffafc1211eb188",
      "IsHidden": "False"
    },
    {
      "Start": "d9f1c0b8a44b44f798f02cd895b6ceb5",
      "End": "e7f7246965504b00ae085d03d14c6d75",
      "Id": "b7dfeab2e0534159bd28fe67076e5e1f",
      "IsHidden": "False"
    },
    {
      "Start": "d9f1c0b8a44b44f798f02cd895b6ceb5",
      "End": "078ceca9538445b587d6177c235ad29f",
      "Id": "4dc675e3c82746bfa897fb2842efc345",
      "IsHidden": "False"
    },
    {
      "Start": "2206d9c49e2044d38b9ce78f0b52d0ab",
      "End": "66c60da53e4f49f58879d3edf21442a5",
      "Id": "10545de9d6eb4ca89dae89aaac6e34b9",
      "IsHidden": "False"
    },
    {
      "Start": "2206d9c49e2044d38b9ce78f0b52d0ab",
      "End": "733414128dd94caca00213a16d9766ac",
      "Id": "983a91c8f92e4996af44ae97de44a085",
      "IsHidden": "False"
    },
    {
      "Start": "2206d9c49e2044d38b9ce78f0b52d0ab",
      "End": "3391d13702234ccfb3f7fe91d0d13a19",
      "Id": "f087b7da1862434c9255de455802d2a7",
      "IsHidden": "False"
    },
    {
      "Start": "92f2975b6b2743178f0909bc70611ac1",
      "End": "3c3b2cd8c47b44d5bf7145cc6aef16c0",
      "Id": "1952d83259f648acb78240d1dc2bd464",
      "IsHidden": "False"
    },
    {
      "Start": "4d22262083884012adcfb162c83f73f1",
      "End": "3396c82a2f50490b909b9a7a4df02d13",
      "Id": "168b4cb7707d47c283e314629565aea0",
      "IsHidden": "False"
    },
    {
      "Start": "98b397e2fec14e43870bfbcbc2c65725",
      "End": "d623331d4fae4f79baa78e5e92ccbd6a",
      "Id": "576c0fe5cfc04242b429f45680260f67",
      "IsHidden": "False"
    },
    {
      "Start": "628e189a1a674d238d47c51cb028966d",
      "End": "944b854adafd466ea046d97aaf12fb67",
      "Id": "3f20541e3f944474b0137c1e975ed4c3",
      "IsHidden": "False"
    },
    {
      "Start": "d5304ea5f512473584e82a10accda94f",
      "End": "3dce343d342949a49d152821d1172762",
      "Id": "460a5875197f4e74a0a488439c4bc9e4",
      "IsHidden": "False"
    },
    {
      "Start": "4f02761050604d8fbb7db3707007710b",
      "End": "0758bf973a8d42738e9200db04020de7",
      "Id": "e01b2773f21e42f39ceb813c20e78211",
      "IsHidden": "False"
    },
    {
      "Start": "f01c4c7fa1e5440fb44787e94669bca6",
      "End": "b5f6823e8a1a4403b4fb338f9c9e7366",
      "Id": "37f6c09894be4475a5e0eb46c1eb5eef",
      "IsHidden": "False"
    },
    {
      "Start": "dd8e709aeebc4743a2ac55c5441a47d6",
      "End": "afe62e17ca314cd680a3e4313ad601cb",
      "Id": "400e2735f8fe44e28a21a9c90ee75cfa",
      "IsHidden": "False"
    },
    {
      "Start": "1efc375cb3074850a6ff338f4e9e1015",
      "End": "3a0e1f0ebf4b4fcda64d8801276286a9",
      "Id": "a21397acd2224032916c2321a9a4b1af",
      "IsHidden": "False"
    },
    {
      "Start": "ca5823857a9d4690958bba2690605440",
      "End": "3ed269927d1e4088801ec15852bb3b84",
      "Id": "298b706901904b17aae3f0985ea0def0",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.18",
      "Data": {}
    }
  ],
  "Author": "Autodesk, Inc.",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.18.0.4931",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": 316813.53125,
      "EyeY": 463.6270751953125,
      "EyeZ": -4838184.0,
      "LookX": 127.1875,
      "LookY": -356.87112426757813,
      "LookZ": -449.5,
      "UpX": 0.10922324657440186,
      "UpY": 0.90259355306625366,
      "UpZ": -0.41640770435333252
    },
    "ConnectorPins": [
      {
        "Left": 5920.2326981838833,
        "Top": -50.995501590511793,
        "IsHidden": false,
        "ConnectorGuid": "9ff775cc-ad03-48f6-add7-56f1ec1927f5"
      },
      {
        "Left": 7007.0230249132665,
        "Top": -49.138766046389065,
        "IsHidden": false,
        "ConnectorGuid": "9ff775cc-ad03-48f6-add7-56f1ec1927f5"
      },
      {
        "Left": 8979.9312013299659,
        "Top": 531.03136306293914,
        "IsHidden": false,
        "ConnectorGuid": "a2480954-83c7-4b59-8f27-603ae048cd70"
      },
      {
        "Left": 5974.5055654809557,
        "Top": 938.43532055274522,
        "IsHidden": false,
        "ConnectorGuid": "983a91c8-f92e-4996-af44-ae97de44a085"
      },
      {
        "Left": -425.97262963356059,
        "Top": 965.37721652502808,
        "IsHidden": false,
        "ConnectorGuid": "983a91c8-f92e-4996-af44-ae97de44a085"
      },
      {
        "Left": -345.585457738899,
        "Top": -645.39480290399615,
        "IsHidden": false,
        "ConnectorGuid": "b7dfeab2-e053-4159-bd28-fe67076e5e1f"
      },
      {
        "Left": -345.585457738899,
        "Top": -645.39480290399615,
        "IsHidden": false,
        "ConnectorGuid": "b7dfeab2-e053-4159-bd28-fe67076e5e1f"
      },
      {
        "Left": 5854.08952862198,
        "Top": -654.67199066899821,
        "IsHidden": false,
        "ConnectorGuid": "b7dfeab2-e053-4159-bd28-fe67076e5e1f"
      },
      {
        "Left": 5854.08952862198,
        "Top": -654.67199066899821,
        "IsHidden": false,
        "ConnectorGuid": "b7dfeab2-e053-4159-bd28-fe67076e5e1f"
      }
    ],
    "NodeViews": [
      {
        "Id": "81b738ccdff14ad390d124277446ae04",
        "Name": "Curve.PullOntoPlane",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1523.9077014590707,
        "Y": 321.80631323210008
      },
      {
        "Id": "f000fe20820444fa8bae00953fcb609c",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2152.1949437058765,
        "Y": 255.47179044179461
      },
      {
        "Id": "217a18c2971f40e5baf4261cd4804a39",
        "Name": "Plane.XY",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1312.1335464348456,
        "Y": 427.67839032807376
      },
      {
        "Id": "8bb8123acf4c45a489680159a6410f37",
        "Name": "Surface.ByPatch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1827.9174130289889,
        "Y": 321.50380460929216
      },
      {
        "Id": "d7c803e19c61454f88cbe78a62f2149d",
        "Name": "Geometry.Intersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2384.5798694810942,
        "Y": 315.14727610705506
      },
      {
        "Id": "6241181f0db84d45908c23d52b542d45",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2691.9888164081044,
        "Y": 315.80717220411168
      },
      {
        "Id": "64424e02f08f4c9dae6078fe0c46ab27",
        "Name": "BoundingBox.ByGeometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3085.5009249801369,
        "Y": -107.94353543941679
      },
      {
        "Id": "395b3707797b4d42b4b694e1fd1a24f0",
        "Name": "BoundingBox.MinPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3436.7007689687671,
        "Y": -169.26523319697844
      },
      {
        "Id": "18c2b5ebbbbd4e8cb4a8767fec6802bf",
        "Name": "BoundingBox.MaxPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 3437.6409762858284,
        "Y": -26.547729362636289
      },
      {
        "Id": "76548b57e5064c92a00b1ac79542b903",
        "Name": "Range",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4295.8776379072033,
        "Y": 144.30053121986151
      },
      {
        "Id": "9ba7c786605c43ad9b6544ce708bf4fc",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3963.3071651291393,
        "Y": 132.12080939074241
      },
      {
        "Id": "43ee04aa38f747eca1cc0d40d7d09a01",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3970.341050984578,
        "Y": -6.6431968432247572
      },
      {
        "Id": "c7f4f266bf514d29a008b44aa7b38665",
        "Name": "Point.ByCoordinates",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4634.8017681596712,
        "Y": 447.33409454661233
      },
      {
        "Id": "80b7b9c303e147e1b328825e1739f917",
        "Name": "Range",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4300.1986023649088,
        "Y": 727.941694990692
      },
      {
        "Id": "da00b8b4a9dd44aa9489e08dcbf35ff0",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3964.6688249242843,
        "Y": 726.49341928124454
      },
      {
        "Id": "a38f0ee68ea44578bbe141444ff79431",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3960.7240856213175,
        "Y": 588.90233764415166
      },
      {
        "Id": "efb3f7592a71449c854fa06071c67ba1",
        "Name": "Geometry.DoesIntersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5213.6646215284027,
        "Y": 324.76043083076735
      },
      {
        "Id": "22dcc49e711b4761b51cac051b5925da",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 4913.3723695838707,
        "Y": 447.47407075679081
      },
      {
        "Id": "056ee4e241a84acfbf8fa4b3b9b4df99",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 5543.6296430666489,
        "Y": 447.98030670358759
      },
      {
        "Id": "2bda922f9dd14cc7b47c2825faeeeaf5",
        "Name": "Cut Color",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -728.92927238462448,
        "Y": 1811.5561191917459
      },
      {
        "Id": "92f9a46921c94757b43f6650fb27e492",
        "Name": "Fill Color",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -729.9261732704847,
        "Y": 1678.9134907649359
      },
      {
        "Id": "edd9c2cf13c6452fb3e5533341a31605",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -463.02680656944335,
        "Y": 1724.9366673235027
      },
      {
        "Id": "fcdf185c25034aa3b1eed83a23984e54",
        "Name": "-",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6763.6755576636369,
        "Y": 404.23185018394577
      },
      {
        "Id": "98fa0984a3cc4aa6a43c45f2d52dedbc",
        "Name": "Number of Digits for Rounding",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7370.791054129656,
        "Y": 1158.6541145404844
      },
      {
        "Id": "fd10391cf4d54a0ca94b5ff6d17360e6",
        "Name": "DBText.Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9157.48346208237,
        "Y": 176.78810954731085
      },
      {
        "Id": "dddf211b1b9d44ac9a64baedf3a788bb",
        "Name": "String.Substring",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8339.4317423026914,
        "Y": 591.31019016301661
      },
      {
        "Id": "68810fc8baa948859f6bed938f7b4050",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7836.6986662852923,
        "Y": 691.39022889250157
      },
      {
        "Id": "b5ff5c5c6d7d4063bc367e729a013ea2",
        "Name": "String from Object",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7545.0179071917028,
        "Y": 590.78188382519249
      },
      {
        "Id": "9ce2bf6b4d86416f8976edbb11285a34",
        "Name": "Text Vertical Mode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8605.3307451444925,
        "Y": 441.70344896183212
      },
      {
        "Id": "4598b5def549483ea58dcaef0a464b87",
        "Name": "Text Horizontal Mode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8587.265013174203,
        "Y": 303.31417504286736
      },
      {
        "Id": "182284863b1647d7a706377808c6103d",
        "Name": "Cut/Fill Text Layer",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8645.45302665391,
        "Y": 72.628851764005844
      },
      {
        "Id": "82cba9ddf5984202925a7864695a0722",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7258.194012035503,
        "Y": 409.90852068622087
      },
      {
        "Id": "7cb957cec9734ed8a4d12ae2aee9535e",
        "Name": "<",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7018.859375819703,
        "Y": 494.64735215750159
      },
      {
        "Id": "0b5b4517be4b4d41b682ec96942dcd26",
        "Name": "Number",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6816.5065262693424,
        "Y": 565.412550359464
      },
      {
        "Id": "4cbfbb1e7c144a5981ca8222bf77594a",
        "Name": "List.GroupByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7261.4083180705493,
        "Y": 218.30630531579436
      },
      {
        "Id": "422cdbe6e7d844f7aeb809254dc19987",
        "Name": "Object.SetColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9971.501882780869,
        "Y": 1650.6075523540164
      },
      {
        "Id": "e4e76f817b444d67b41c55eb9802312d",
        "Name": "Text Height",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 8689.2109753813311,
        "Y": -56.782675840641957
      },
      {
        "Id": "ce044582915c42c99242fb0b38300776",
        "Name": "Text Grid X Spacing",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3460.1132303770464,
        "Y": 210.07169325762931
      },
      {
        "Id": "6b64a8e5eed04dc9bb5facf4fae94160",
        "Name": "Text Grid Y Spacing",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3449.8205250296724,
        "Y": 794.3243376490509
      },
      {
        "Id": "68b01491cc964dfd93e65863229bd103",
        "Name": "Object.Delete",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2119.65508040412,
        "Y": -55.443166573623785
      },
      {
        "Id": "c9eeb5144a6c4e39b736ed7d87f38f4a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1309.6411580849942,
        "Y": -186.32901659510918
      },
      {
        "Id": "4ab3b42b7f934710a4fbe19b746a6af9",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -220.33764289740168,
        "Y": 597.90536943587153
      },
      {
        "Id": "a19af3678bfe4d66836cea6f02a26b42",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 649.84926707725322,
        "Y": 321.05669077614436
      },
      {
        "Id": "0902ebe950514791a17d71685ece0970",
        "Name": "TinSurface.ExtractBorder",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 208.34235680703023,
        "Y": -180.26177060148535
      },
      {
        "Id": "b4b1efca3072433c9d78743c1b58e898",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2152.9500036600934,
        "Y": 396.38144658846159
      },
      {
        "Id": "d3e95f3975904f7097a43266a4090674",
        "Name": "Object.Geometry",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 900.60743629610317,
        "Y": 320.66486605794148
      },
      {
        "Id": "9a31608ecda1486eb76d18c17722eb3d",
        "Name": "GeometryColor.ByGeometryColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 860.86808220416663,
        "Y": 655.85981379904842
      },
      {
        "Id": "e0e80c23029540f283e97cba6e1dbf0f",
        "Name": "Select Base Surface",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -832.3886292998958,
        "Y": 456.77045489068144
      },
      {
        "Id": "74ee82fcea1f40f4800137b459277b6c",
        "Name": "Select Comparison Surface",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -861.32457645027023,
        "Y": 746.07475008568713
      },
      {
        "Id": "9b157d12b15b4a4c964f6e06de3a1409",
        "Name": "TinSurface.Triangles",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 547.61433632489354,
        "Y": 595.29953693337393
      },
      {
        "Id": "1f3e1c34bd1a4399878e4fa128a406b1",
        "Name": "Color.ByARGB",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 612.19301935012516,
        "Y": 746.88148033967752
      },
      {
        "Id": "7575a22c7c68491f9a274ce6b454f06c",
        "Name": "Transparency",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 191.17825107592887,
        "Y": 745.17260421020512
      },
      {
        "Id": "59ff27c216da4b7b9ab547700ab86392",
        "Name": "Surface.SamplePoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6182.5967910752624,
        "Y": 516.83146163599
      },
      {
        "Id": "a14a07b6cb984744a9f7896d3a78165a",
        "Name": "Point.Z",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6476.1925413300378,
        "Y": 328.92824141451507
      },
      {
        "Id": "4dd9aa7645894965b09381c0517a7d68",
        "Name": "Point.Z",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6474.81086331164,
        "Y": 516.68848648457254
      },
      {
        "Id": "b07f653d672c496d993cc175455db971",
        "Name": "Surface.SamplePoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6182.59679107526,
        "Y": 328.024756649934
      },
      {
        "Id": "101e531f99b443b5b4736441094b3bb9",
        "Name": "Solids Layer",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -741.836058639048,
        "Y": 1529.3729828857749
      },
      {
        "Id": "39f64fc1befa4b399391f7aa4bc83602",
        "Name": "Create Cut/Fill Solids?",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -819.657461857845,
        "Y": 1386.33804352925
      },
      {
        "Id": "11bde97edc904cfaa780ae17a12518c5",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1699.2812602263302,
        "Y": 1267.3066660470133
      },
      {
        "Id": "0ae790a0ca144c29837a28d64a00aa81",
        "Name": "Python Script From String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 210.62261745792443,
        "Y": 1364.9419826184737
      }
    ],
    "Annotations": [
      {
        "Id": "5e5b61e20a6c4422ad7bfa664d2c0125",
        "Title": "Extract surface boundary polylines",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a19af3678bfe4d66836cea6f02a26b42",
          "0902ebe950514791a17d71685ece0970",
          "d3e95f3975904f7097a43266a4090674",
          "2e79a3f616a640328067c0be7e7a9be2",
          "39b90b34f3a54901a7afbdd9340060cf"
        ],
        "HasNestedGroups": false,
        "Left": 180.84235680703023,
        "Top": -340.26177060148535,
        "Width": 990.76507948907283,
        "Height": 823.31846137762977,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -267.26177060148535,
        "InitialHeight": 733.31846137762977,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "942a5e545df24c158b02e964db5bff8f",
        "Title": "Delete the extracted polylines",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "68b01491cc964dfd93e65863229bd103",
          "c9eeb5144a6c4e39b736ed7d87f38f4a",
          "a451f2984bec421b9c74d17b1ae9b1ba"
        ],
        "HasNestedGroups": false,
        "Left": 1299.6411580849942,
        "Top": -491.92664334827441,
        "Width": 1022.0139223191256,
        "Height": 568.48347677465063,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -418.92664334827441,
        "InitialHeight": 508.48347677465063,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "1ef0da75dfc04a6fa3931bbe2853d4df",
        "Title": "Get area of overlap between two surfaces",
        "DescriptionText": "Cut/fill calculations are only valid for the 2D area that is shared between two surfaces. We need to figure out what that area is so we can generate cut/fill text only within that region.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "81b738ccdff14ad390d124277446ae04",
          "f000fe20820444fa8bae00953fcb609c",
          "217a18c2971f40e5baf4261cd4804a39",
          "8bb8123acf4c45a489680159a6410f37",
          "d7c803e19c61454f88cbe78a62f2149d",
          "6241181f0db84d45908c23d52b542d45",
          "b4b1efca3072433c9d78743c1b58e898",
          "0ef95832e4644b0ca81e56a1dc908606",
          "75c82834fc0d402da9cedf3ff0b6fd78",
          "2752ed67478f44018bba8d3a3ffa241b"
        ],
        "HasNestedGroups": false,
        "Left": 1302.1335464348456,
        "Top": 169.14727610705506,
        "Width": 1575.8552699732588,
        "Height": 390.5311142210187,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 242.14727610705506,
        "InitialHeight": 330.5311142210187,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "c7cfc7e230f64255a7ecd75c72594161",
        "Title": "Input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ce044582915c42c99242fb0b38300776",
          "6b64a8e5eed04dc9bb5facf4fae94160"
        ],
        "HasNestedGroups": false,
        "Left": 3439.8205250296724,
        "Top": 137.07169325762931,
        "Width": 247.29270534737407,
        "Height": 789.25264439142165,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 210.07169325762931,
        "InitialHeight": 729.25264439142165,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "c6638e2892814c4fbb23d2e3d4e617bd",
        "Title": "Group points based on cut (-) or fill (+)",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fcdf185c25034aa3b1eed83a23984e54",
          "82cba9ddf5984202925a7864695a0722",
          "7cb957cec9734ed8a4d12ae2aee9535e",
          "0b5b4517be4b4d41b682ec96942dcd26",
          "4cbfbb1e7c144a5981ca8222bf77594a"
        ],
        "HasNestedGroups": false,
        "Left": 6753.6755576636369,
        "Top": 145.30630531579436,
        "Width": 741.73276040691235,
        "Height": 552.10624504366967,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 218.30630531579436,
        "InitialHeight": 492.10624504366967,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "4808e071c3264f0489b594c5b1d30fb3",
        "Title": "Input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "182284863b1647d7a706377808c6103d",
          "e4e76f817b444d67b41c55eb9802312d"
        ],
        "HasNestedGroups": false,
        "Left": 8635.45302665391,
        "Top": -129.78267584064196,
        "Width": 227.0,
        "Height": 334.4115276046478,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -56.782675840641957,
        "InitialHeight": 274.4115276046478,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "4f6e7fdaef654aab8613f1b3b5db804b",
        "Title": "Create the cut/fill text",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fd10391cf4d54a0ca94b5ff6d17360e6"
        ],
        "HasNestedGroups": false,
        "Left": 9147.48346208237,
        "Top": 60.788109547310853,
        "Width": 281.0,
        "Height": 487.99999999999994,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": 176.78810954731085,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "bd1323845ffa4338bf5282f7ed0ad2a1",
        "Title": "Set text color",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "422cdbe6e7d844f7aeb809254dc19987"
        ],
        "HasNestedGroups": false,
        "Left": 9961.501882780869,
        "Top": 1534.6075523540164,
        "Width": 225.0,
        "Height": 278.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": 1650.6075523540164,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "3432f8f385ab4b059cf960243a81d1ca",
        "Title": "Input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "98fa0984a3cc4aa6a43c45f2d52dedbc"
        ],
        "HasNestedGroups": false,
        "Left": 7360.791054129656,
        "Top": 1085.6541145404844,
        "Width": 368.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 1158.6541145404844,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "0910522b103943899fd751b0193e9e18",
        "Title": "Round cut/fill values",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dddf211b1b9d44ac9a64baedf3a788bb",
          "68810fc8baa948859f6bed938f7b4050",
          "b5ff5c5c6d7d4063bc367e729a013ea2",
          "7286e9787a274c3bb01dec47e5505ce2"
        ],
        "HasNestedGroups": false,
        "Left": 7535.0179071917028,
        "Top": 477.68151894293851,
        "Width": 1040.4138351109887,
        "Height": 375.70870994956306,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 550.68151894293851,
        "InitialHeight": 285.70870994956306,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "fe3d7839b3d349428a56f53c1a55c75a",
        "Title": "Visualize the surfaces",
        "DescriptionText": "These nodes are for visualization only and don't affect the functionality of the rest of the graph.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9a31608ecda1486eb76d18c17722eb3d",
          "9b157d12b15b4a4c964f6e06de3a1409",
          "1f3e1c34bd1a4399878e4fa128a406b1",
          "7575a22c7c68491f9a274ce6b454f06c"
        ],
        "HasNestedGroups": false,
        "Left": 181.17825107592887,
        "Top": 522.29953693337393,
        "Width": 1009.6898311282376,
        "Height": 456.58194340630359,
        "FontSize": 36.0,
        "GroupStyleId": "bc688959-ce34-4bf5-90f8-6ddd23f80989",
        "InitialTop": 595.29953693337393,
        "InitialHeight": 296.58194340630359,
        "TextblockHeight": 63.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "5310531ba4fe4c2b868869a92884442b",
        "Title": "Input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e0e80c23029540f283e97cba6e1dbf0f",
          "74ee82fcea1f40f4800137b459277b6c",
          "101e531f99b443b5b4736441094b3bb9",
          "39f64fc1befa4b399391f7aa4bc83602",
          "2bda922f9dd14cc7b47c2825faeeeaf5",
          "92f9a46921c94757b43f6650fb27e492",
          "7db73a92f04245a29811db56429b491b",
          "0114e34ff8dc4b7ba0b1eec14cd469ff"
        ],
        "HasNestedGroups": false,
        "Left": -883.82457645027023,
        "Top": 262.77045489068144,
        "Width": 318.0,
        "Height": 1680.7856643010646,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": 335.77045489068144,
        "InitialHeight": 1572.7856643010646,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "c5b8e8ac618c46b4a35cbb2242e2e3ee",
        "Title": "Compute surface elevations at the grid points",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "59ff27c216da4b7b9ab547700ab86392",
          "a14a07b6cb984744a9f7896d3a78165a",
          "4dd9aa7645894965b09381c0517a7d68",
          "b07f653d672c496d993cc175455db971"
        ],
        "HasNestedGroups": false,
        "Left": 6172.59679107526,
        "Top": 212.02475664993398,
        "Width": 515.59575025477807,
        "Height": 466.806704986056,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": 328.024756649934,
        "InitialHeight": 333.806704986056,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "d4e27eed03214bf88bc2b2af28f95f09",
        "Title": "Create solids",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0ae790a0ca144c29837a28d64a00aa81",
          "9fbaaa56963f42cbb7c192c529dd62c9"
        ],
        "HasNestedGroups": false,
        "Left": 185.62261745792443,
        "Top": 1161.9419826184737,
        "Width": 317.0,
        "Height": 505.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": 1234.9419826184737,
        "InitialHeight": 275.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "692bbd9720764f9fb725d0ff1a251e64",
        "Title": "Fill the intersection area with a grid of points",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "64424e02f08f4c9dae6078fe0c46ab27",
          "395b3707797b4d42b4b694e1fd1a24f0",
          "18c2b5ebbbbd4e8cb4a8767fec6802bf",
          "76548b57e5064c92a00b1ac79542b903",
          "9ba7c786605c43ad9b6544ce708bf4fc",
          "43ee04aa38f747eca1cc0d40d7d09a01",
          "c7f4f266bf514d29a008b44aa7b38665",
          "80b7b9c303e147e1b328825e1739f917",
          "da00b8b4a9dd44aa9489e08dcbf35ff0",
          "a38f0ee68ea44578bbe141444ff79431",
          "efb3f7592a71449c854fa06071c67ba1",
          "22dcc49e711b4761b51cac051b5925da",
          "056ee4e241a84acfbf8fa4b3b9b4df99",
          "c7cfc7e230f64255a7ecd75c72594161"
        ],
        "HasNestedGroups": true,
        "Left": 3075.5009249801369,
        "Top": -242.26523319697844,
        "Width": 2713.128718086512,
        "Height": 1183.5895708460293,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -169.26523319697844,
        "InitialHeight": 1123.5895708460293,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "3e1e2c7ad1744bb08cf0649fb3302f4e",
        "Title": "REPLACE IF POSSIBLE",
        "DescriptionText": "The Python node is currently broken",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "11bde97edc904cfaa780ae17a12518c5"
        ],
        "HasNestedGroups": false,
        "Left": -1709.2812602263302,
        "Top": 1194.3066660470133,
        "Width": 758.0,
        "Height": 999.99999999999977,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 1267.3066660470133,
        "InitialHeight": 956.99999999999977,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "7db73a92f04245a29811db56429b491b",
        "Title": "The surface that becomes the \"datum\" for cut/fill measurements (typically the existing ground).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -863.3886292998958,
        "Top": 343.77045489068144,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "e0e80c23029540f283e97cba6e1dbf0f"
      },
      {
        "Id": "0114e34ff8dc4b7ba0b1eec14cd469ff",
        "Title": "The surface to compare to the base surface (typically a grading surface).",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -873.82457645027023,
        "Top": 633.07475008568713,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "74ee82fcea1f40f4800137b459277b6c"
      },
      {
        "Id": "fcf7353944244b8a9b2048b34fa7d43d",
        "Title": "These same colors are used for the cut/fill text that gets generated way over there ------>",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -529.02680656944335,
        "Top": 1659.9366673235027,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "edd9c2cf13c6452fb3e5533341a31605"
      },
      {
        "Id": "2e79a3f616a640328067c0be7e7a9be2",
        "Title": "This extracts the 3D polyline boundary of a TIN surface. The extracted polyline is placed into Model Space.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 190.84235680703023,
        "Top": -259.26177060148535,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "0902ebe950514791a17d71685ece0970"
      },
      {
        "Id": "39b90b34f3a54901a7afbdd9340060cf",
        "Title": "After extracting the polylines, we need to bring them into Dynamo space as Dynamo polycurves so we can do more work with them.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 862.60743629610317,
        "Top": 241.66486605794148,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "d3e95f3975904f7097a43266a4090674"
      },
      {
        "Id": "a451f2984bec421b9c74d17b1ae9b1ba",
        "Title": "Once we've brought the polyline geometry into Dynamo space, we have no further use for it. We don't want the polylines to stick around in Model Space, so we delete them.\n\nIMPORTANT\nNotice what is going on in the code block. This is to ensure that the polyline geometry is successfully obtained in Dynamo space BEFORE the polylines get deleted. If we don't enforce this order of operations, then we create what is called a 'race condition' where there's no guarantee that nodes will be executed in the order that we want. ",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1658.9885389038468,
        "Top": -410.92664334827441,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0ef95832e4644b0ca81e56a1dc908606",
        "Title": "Pull the boundary curves onto the same plane.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1501.9077014590707,
        "Top": 271.80631323210008,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "81b738ccdff14ad390d124277446ae04"
      },
      {
        "Id": "75c82834fc0d402da9cedf3ff0b6fd78",
        "Title": "Create planar surfaces from the boundary curves.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1808.9174130289889,
        "Top": 271.50380460929216,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "8bb8123acf4c45a489680159a6410f37"
      },
      {
        "Id": "2752ed67478f44018bba8d3a3ffa241b",
        "Title": "Compute the area of overlap (i.e., 'intersection') between the two surfaces.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2373.5798694810942,
        "Top": 250.14727610705506,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "d7c803e19c61454f88cbe78a62f2149d"
      },
      {
        "Id": "7286e9787a274c3bb01dec47e5505ce2",
        "Title": "What we're doing here is figuring out the position where we want the string to end so that we get the number of digits that we want. Then we remove everything after that point.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 7902.7410695314284,
        "Top": 558.68151894293851,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9fbaaa56963f42cbb7c192c529dd62c9",
        "Title": "Our goal is to only create AutoCAD solids if the toggle is set to True. This is a great example of when it's easier (and more effective) to just write a short Python script instead of creating a complicated web of nodes to try and handle this condition.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 195.62261745792443,
        "Top": 1242.9419826184737,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "0ae790a0ca144c29837a28d64a00aa81"
      }
    ],
    "X": 235.47427149020069,
    "Y": 338.08521038081369,
    "Zoom": 0.12091834135970711
  }
}