{
  "Uuid": "dc624a0d-3a28-4e67-ace0-49e249e0b05a",
  "IsCustomNode": false,
  "Description": "Creates a closed polyline for each region in a corridor.",
  "Name": "Roads_CorridorRegionBoundaries",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "d538ba8ca0004b85975e3320c9b1bf4f",
      "Name": "Select Corridor",
      "Type": "selection",
      "Type2": "hostSelection",
      "Value": "",
      "Description": "Select object in the current document.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "0883f4d3d63e43f7a20a5e77dae227e5",
      "Name": "Region Areas",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualizes a node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ae2fdf49b6de45c181b471df59d98084",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "821c8d3edcb2412bbca637999d8bc18d",
          "Name": "corridor",
          "Description": "Autodesk.Civil.DynamoNodes.Corridor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d76989cc7ed74c809eab046b7cb776c1",
          "Name": "Baseline[]",
          "Description": "Baseline[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Corridor.Baselines",
      "Replication": "Auto",
      "Description": "Get all Baselines from the Corridor.\n\nCorridor.Baselines: Baseline[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5f12750e58ad4275b03c8c754fcea52b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "468fd3fb1af54e4984cdbe31c07bc519",
          "Name": "baseline",
          "Description": "Autodesk.Civil.DynamoNodes.Baseline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cfde206078d4c9a87b458fab9622c2c",
          "Name": "BaselineRegion[]",
          "Description": "BaselineRegion[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Baseline.Regions",
      "Replication": "Auto",
      "Description": "Baseline.Regions: BaselineRegion[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a1726136e2824ee097e5fa63574cde58",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1543876b805d4de6846d65dfe5023210",
          "Name": "baselineRegion",
          "Description": "Autodesk.Civil.DynamoNodes.BaselineRegion",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3a1b0334dce4d4daaf51bad4841c9e4",
          "Name": "double[]",
          "Description": "double[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.BaselineRegion.Stations",
      "Replication": "Auto",
      "Description": "Get all Stations in the region.\n\nBaselineRegion.Stations: double[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f11d26259e254c0482deb35ce5729e7e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "69973c90d13743d18269afcb9150010f",
          "Name": "baseline",
          "Description": "Autodesk.Civil.DynamoNodes.Baseline",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99376df96b8a4c8ab0d3614b1b500cee",
          "Name": "point",
          "Description": "A Dynamo Point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25e72fc29224417686607b4625c6b284",
          "Name": "Station",
          "Description": "Dictionary[string, object]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60e7ff7ffbe045ad80b2748d369ccae6",
          "Name": "Offset",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2522494d7424bc2a132aaf714b61400",
          "Name": "Elevation",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Baseline.StationOffsetByPoint@Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Get the Station and offset at a specified point.\n\nBaseline.StationOffsetByPoint (point: Point): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ce0b17ada72841ff8f9844c0bb7fcd19",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fcd7138025db45b0a91b1e97aa78b137",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "eea78ecf60f04618b2c59ee15e5b794f",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c69a013d7ab345d498355a09fd9a1640",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79f9ce4760524f0b9412f9bbcff44a98",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b81b79a1c3ef47bd9494fa638f2f4dc8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "38c43f09114645c78c7db4995364b9e4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "3003185078d64466a22f0ac2e9ef25cc",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca87cc3c84e9497694d794e9e3fda536",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4a4a84dcadd944739b6e130a200ce243",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "43eae66e6e854127a91d496da636a26f",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "19304f3c006144deadc4cb430d3a8644",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "47a00b65dab04b509dd5c6a8f07ba5e1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "f7c564eaa1f448fab3658de21eadd143",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "26681ef20731472eba5f984c26f4fa92",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "fcf9c09505644831993d5896495e8853",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "36c83106e3e6496ca637cf740379bafb",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "0a2f7915d7fd460db51671d5868ce1a8",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Replication": "Auto",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9e5b6142268748d8a811bbfd571e0343",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "405e47de044d4ffab98fd09b93682cea",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "35ea840fd44d49b88f736c4344281d49",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "67e79a6b0948417dad3c311d46b00b97",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "70a29c657ebc4625bf1adb1f83a21a8d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0deff6278821413986ec456ac046a573",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "b58de842b555487db83871597e8084e0",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13a2195a02d14c4f8c3aae4b24c9f15c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "4e97d9e9e6c8495e913e0aed580e756d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "afb5f6ba3dab4cafacf05a49a636b79a",
          "Name": "points",
          "Description": "Points to make polycurve\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e23adef15084b8e9df5ed6bff321e34",
          "Name": "connectLastToFirst",
          "Description": "True to connect last point to first point, false to leave open\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9456bc34acbd4e9c85fddcc53803659f",
          "Name": "PolyCurve",
          "Description": "Polycurve created by points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByPoints@Autodesk.DesignScript.Geometry.Point[],bool",
      "Replication": "Auto",
      "Description": "Make PolyCurve by connecting points. Set the 'connectLastToFirst' input to true to close the PolyCurve.\n\nPolyCurve.ByPoints (points: Point[], connectLastToFirst: bool = false): PolyCurve"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "6bb60252a8fb484bba1ff20bf003ce8e",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a2200006ead4456495a1df73b9d4a82a",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": true
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e20d201e04d947eea57f17e2fa0b07ec",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "de4f5f9d4a874b168c3ed710de446a3f",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "669d39a0f5fc413fb22dd66bc6c451aa",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "528f33846ab041859864c8f0f101524d",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double",
      "Replication": "Auto",
      "Description": "Form a Point in the XY plane given two 2 cartesian coordinates. The Z component is 0.\n\nPoint.ByCoordinates (x: double = 0, y: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "56ed2d0872d74a7d946b71da88182c5d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5d21f30049b14b6a985a7b8f4a2a20bd",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "341ae3016e794402a5d466cfe018501e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7886220de033471fb121a00f79adb03a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7f709b7eaf424e53a75e6ec8b38eba31",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "706823e452ba4179b9174d51223acbd8",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "68e3457831854b6986956b9cede289ea",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1f874da36fe544279df094f9c414ed06",
          "Name": "points",
          "Description": "A List of Dynamo Points\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1a836c107084fd28821eaea7c412062",
          "Name": "layer",
          "Description": "The layer for the Object. The default is the current Document's current Layer.\n\nstring\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0ef9fdc2cef46f78882ca24e83ad77c",
          "Name": "block",
          "Description": "The block to add the Object to. The default is the current Document's ModelSpace\n\nBlock\nDefault value : null (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52491aa4b2b747b3bcc259065f94182a",
          "Name": "Polyline",
          "Description": "An AutoCAD Polyline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Polyline.ByPoints@Autodesk.DesignScript.Geometry.Point[],string,Autodesk.AutoCAD.DynamoNodes.Block",
      "Replication": "Auto",
      "Description": "Create an AutoCAD Polyline by a point List, using elevation from the first vertex.\n\nPolyline.ByPoints (points: Point[], layer: string = null, block: Block = null): Polyline"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cceadf92b36b45b39cb63e2586a363f3",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e298aa27c2f1420cb8e521522be67497",
          "Name": "baselineRegion",
          "Description": "Autodesk.Civil.DynamoNodes.BaselineRegion",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3169243209434239bbb30a649674893e",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.BaselineRegion.Name",
      "Replication": "Auto",
      "Description": "Get the Name of the Baseline region.\n\nBaselineRegion.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "996ed761e23b402ba740d8ef179b4f8f",
      "NodeType": "FunctionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6d83f350ada14dc8b831774488a483d4",
          "Name": "Document",
          "Description": "Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.Current",
      "Replication": "Auto",
      "Description": "Get the current AutoCAD Document.\n\nDocument.Current: Document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "bfcbddc17307456a8f34a3e740143d5a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5a708311a9a7492bb3606292d5bae4d5",
          "Name": "document",
          "Description": "Autodesk.AutoCAD.DynamoNodes.Document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23462d232b4f4a648ecffad34a351367",
          "Name": "Block",
          "Description": "Block",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Document.ModelSpace",
      "Replication": "Auto",
      "Description": "Get the model space block table record.\n\nDocument.ModelSpace: Block"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7cdfdcb05cbc4d9dacb91dace8abe584",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "15a5a47f868a4a19812e241d971d47af",
          "Name": "baseline",
          "Description": "Autodesk.Civil.DynamoNodes.Baseline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9ac2b2ed5f34c52bfb5be20e7cee508",
          "Name": "CorridorFeatureLine[]",
          "Description": "CorridorFeatureLine[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Baseline.CorridorFeatureLines",
      "Replication": "Auto",
      "Description": "Baseline.CorridorFeatureLines: CorridorFeatureLine[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8336c9c7cc7b4c46ad24ecd9d444614a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "eaf2f50c7c5647469817a36b23f8e12a",
          "Name": "corridorFeatureLine",
          "Description": "Autodesk.Civil.DynamoNodes.CorridorFeatureLine",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0456d1ca263246ed82e8371db606e678",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.CorridorFeatureLine.PolyCurve",
      "Replication": "Auto",
      "Description": "Get the polycurve of the feature line.\n\nCorridorFeatureLine.PolyCurve: PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f2742f60a21a4a71a48639cfe90444dd",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d88bb371adfa48199c45f79455c6fd41",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "422156f8031944778518684e9741a565",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e15c0e21f4d94255ae994543bc734b84",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 221,
        "G": 160,
        "B": 221,
        "A": 255
      },
      "Id": "3f4e1e9fd47640ebaf8a1d35852ecc53",
      "NodeType": "ColorInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dc10058ddc8a4ca69dfdf6ea3b5876d1",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "Autodesk.AutoCAD.DynamoNodes.ObjectSelection, AutoCADNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [],
      "Id": "d538ba8ca0004b85975e3320c9b1bf4f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34ced7a8b12b4633b006e4b465e86bd8",
          "Name": "Object",
          "Description": "Object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select object in the current document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aadb1c5a1d154ece8a5b917771464838",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "95e00b11c5d0443da9259aa64411c1ff",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc5a5a06f27e415da958ac2a867c3834",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9a2bd544857345e78dd1c5f58d0b367e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6208fe99ea4b4e7fbdbc0e2921c81138",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e344ca3ccf974c359afaf542f6b77b05",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "0883f4d3d63e43f7a20a5e77dae227e5",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "a5d815d3af584fec869a95438a2198d6",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fb03908af7e4b5f8d4f48ff568bfa58",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1e3a9ebf820b423b9274df580ab9bac8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ccbfcb03625c47178d98f62fad1e97a1",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92cbc44ac91e4e2b85ad45755395a1fd",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "619427f5a9f74b99b83662180421324d",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "d9909032d13e4c508dfdfdeac94525bf",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1fd3edc8229e42e9bb1228106b6a5f78",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[\"Region\",\"Area\"];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c7ffcd8f77ed4100b450a567b88279bc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "567d07d9b21941f498fa49f4fc67f74c",
          "Name": "baseline",
          "Description": "Autodesk.Civil.DynamoNodes.Baseline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23d2632b6372436280e9b3422ac515d8",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Baseline.Name",
      "Replication": "Auto",
      "Description": "Baseline.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "826fcb0741044a44bbb85c799e899ca5",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ea487880ec044897a34374a12cabb278",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b599afc692a048d089321ac3faf89f53",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "1b0bd00999c84816804253beb9340629",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Replication": "Longest",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7f54224dab8647aeb668bcbc58bdff27",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "76087be464834edeacda0018d35c2670",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "228aeedb551c41df87e0b0da30f81374",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "af07a1142ea244e8a5fbdfb084c84556",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cc9a6e99160242119a0676f6c07d9b22",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "826ae1ec5daf4282a97cc7da391cf106",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6577d67b97634514a09d611c84071a97",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59f35a51b78c4d22a83d096ca630323a",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "8a5ecc50ff764be7906298ecd758a206",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00bf72bbbbab41cf89a4c3b41e44385b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "2;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1cad90b3d9e648a4a37437795c1b44d6",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3d0f53d1666047498adaf90cac5d702f",
          "Name": "baseline",
          "Description": "Autodesk.Civil.DynamoNodes.Baseline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16893140d8084a58a4b2dc1926fd70c0",
          "Name": "station",
          "Description": "A raw station value\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd4d58c3ca924f45921ce7aaa6a30cc4",
          "Name": "code",
          "Description": "code\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f0b6b1c0c5045a3bc5ce59c6dc75d6a",
          "Name": "Points",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10cd00f69f2f4df0b0ae3effa12dc4ad",
          "Name": "UsedStation",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.Civil.DynamoNodes.Baseline.PointsByLinkCodeAtNearestStation@double,string",
      "Replication": "Auto",
      "Description": "Baseline.PointsByLinkCodeAtNearestStation (station: double, code: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "cc7d8365a2db4f0f9124e34fe8830694",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "24755aabd28d48e7974ee011467b1d7b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Top"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "645ab67057994ff8b4cfc12502459338",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d7997929e6ba4420932e8bcc471e55c3",
          "Name": "list",
          "Description": "List to be checked if it is empty\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8c314e4489744e5bef91c52e0b07914",
          "Name": "bool",
          "Description": "True if list is empty, false if it isnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Replication": "Auto",
      "Description": "Determines if the given list is empty.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "28bd3fcc949e4e2db11f68fb4dda7f6a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6955c2ea272e47b48a7b5b791f42bf30",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21ca97689d1f49868611d46325c9f79e",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eedd9dfcd3ec4f83b82ab57852d63cfe",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d10aad0ef590419bae9a2bae5f0e1e91",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f5593cf2125445d8ac1e2a31e801063f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b4c29c51ae5249f58575a722d9297182",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cda294c7e5b145f7be42ac589225b085",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9c0e1a3f779482196a647c47e5af73e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57948310d1c24f8dbfb8c8e5a6b6c8cc",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5aee6af158104ff6bd5f2f10339c7f2e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "a5e9e3359eb6476ab27f1442e9a696ef",
          "Name": "polyline",
          "Description": "Autodesk.AutoCAD.DynamoNodes.Polyline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b99d3cb64b544c7b541570d0ec0cabb",
          "Name": "value",
          "Description": "The new Closed\n\nbool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55cc3073d68f4691908e8cb1b76a643e",
          "Name": "Polyline",
          "Description": "An AutoCAD Polyline",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.AutoCAD.DynamoNodes.Polyline.SetClosed@bool",
      "Replication": "Auto",
      "Description": "Sets the Closed of the Polyline.\n\nPolyline.SetClosed (value: bool): Polyline"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "a1488828adf64615b45621deda9c27c7",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5b3f2c4cb1a14773b0bf5f56caf0e5fc",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": true
    }
  ],
  "Connectors": [
    {
      "Start": "d76989cc7ed74c809eab046b7cb776c1",
      "End": "468fd3fb1af54e4984cdbe31c07bc519",
      "Id": "afee193f1c25434aacb0d56afa85c9ca",
      "IsHidden": "False"
    },
    {
      "Start": "d76989cc7ed74c809eab046b7cb776c1",
      "End": "6955c2ea272e47b48a7b5b791f42bf30",
      "Id": "6052177ef5174f05aff371b05f71299e",
      "IsHidden": "False"
    },
    {
      "Start": "8cfde206078d4c9a87b458fab9622c2c",
      "End": "d7997929e6ba4420932e8bcc471e55c3",
      "Id": "97f7a25abc3b46b782dc6aef864326a8",
      "IsHidden": "False"
    },
    {
      "Start": "8cfde206078d4c9a87b458fab9622c2c",
      "End": "b4c29c51ae5249f58575a722d9297182",
      "Id": "cda8b54df65a4467a3885653eaf20d72",
      "IsHidden": "False"
    },
    {
      "Start": "a3a1b0334dce4d4daaf51bad4841c9e4",
      "End": "16893140d8084a58a4b2dc1926fd70c0",
      "Id": "3ba312494391400188eae8d6671b07ff",
      "IsHidden": "False"
    },
    {
      "Start": "60e7ff7ffbe045ad80b2748d369ccae6",
      "End": "eea78ecf60f04618b2c59ee15e5b794f",
      "Id": "57c4b87cfe5149f9a2f5f2e158b0ebc7",
      "IsHidden": "False"
    },
    {
      "Start": "c69a013d7ab345d498355a09fd9a1640",
      "End": "43eae66e6e854127a91d496da636a26f",
      "Id": "2aadb00dd3974a10ac32a82ad50813d4",
      "IsHidden": "False"
    },
    {
      "Start": "c69a013d7ab345d498355a09fd9a1640",
      "End": "f7c564eaa1f448fab3658de21eadd143",
      "Id": "8591b6c6a5f64f04be224ac81452994b",
      "IsHidden": "False"
    },
    {
      "Start": "ca87cc3c84e9497694d794e9e3fda536",
      "End": "99376df96b8a4c8ab0d3614b1b500cee",
      "Id": "c02a200abb6c48d8a75809a48c4a6b2f",
      "IsHidden": "False"
    },
    {
      "Start": "ca87cc3c84e9497694d794e9e3fda536",
      "End": "fcd7138025db45b0a91b1e97aa78b137",
      "Id": "e95c4548b850479e8f4f7a0ac3fbe8bd",
      "IsHidden": "False"
    },
    {
      "Start": "19304f3c006144deadc4cb430d3a8644",
      "End": "35ea840fd44d49b88f736c4344281d49",
      "Id": "65c2ac8134ad497ea1a500b3ec14a87c",
      "IsHidden": "False"
    },
    {
      "Start": "26681ef20731472eba5f984c26f4fa92",
      "End": "36c83106e3e6496ca637cf740379bafb",
      "Id": "873740549988474ebe721a4de8b1b780",
      "IsHidden": "False"
    },
    {
      "Start": "0a2f7915d7fd460db51671d5868ce1a8",
      "End": "405e47de044d4ffab98fd09b93682cea",
      "Id": "31b6e785ba564a298c46ff7ad5add767",
      "IsHidden": "False"
    },
    {
      "Start": "67e79a6b0948417dad3c311d46b00b97",
      "End": "0deff6278821413986ec456ac046a573",
      "Id": "cb60d01e172f41a79d223e0a7ef4e8a6",
      "IsHidden": "False"
    },
    {
      "Start": "13a2195a02d14c4f8c3aae4b24c9f15c",
      "End": "5d21f30049b14b6a985a7b8f4a2a20bd",
      "Id": "ec78f1f894154bb08c4def2fbb1e3b00",
      "IsHidden": "False"
    },
    {
      "Start": "13a2195a02d14c4f8c3aae4b24c9f15c",
      "End": "7f709b7eaf424e53a75e6ec8b38eba31",
      "Id": "251eac874a0e4bbba94043d5b4b98b2d",
      "IsHidden": "False"
    },
    {
      "Start": "9456bc34acbd4e9c85fddcc53803659f",
      "End": "6208fe99ea4b4e7fbdbc0e2921c81138",
      "Id": "9bc92a569f184f7a97423a730532332f",
      "IsHidden": "False"
    },
    {
      "Start": "a2200006ead4456495a1df73b9d4a82a",
      "End": "5e23adef15084b8e9df5ed6bff321e34",
      "Id": "29ed2fb9f0be491e9566f1c20c2a16d6",
      "IsHidden": "False"
    },
    {
      "Start": "528f33846ab041859864c8f0f101524d",
      "End": "afb5f6ba3dab4cafacf05a49a636b79a",
      "Id": "5cc469589a9b461ba9c4dc769d609460",
      "IsHidden": "False"
    },
    {
      "Start": "528f33846ab041859864c8f0f101524d",
      "End": "1f874da36fe544279df094f9c414ed06",
      "Id": "a748f39007fc4cb2a9e2e087f7d5ef16",
      "IsHidden": "False"
    },
    {
      "Start": "341ae3016e794402a5d466cfe018501e",
      "End": "de4f5f9d4a874b168c3ed710de446a3f",
      "Id": "b4d6b7c1c9f44f0aa68de636a3c240f7",
      "IsHidden": "False"
    },
    {
      "Start": "706823e452ba4179b9174d51223acbd8",
      "End": "669d39a0f5fc413fb22dd66bc6c451aa",
      "Id": "05dfb3efbd2744b68b5a43f96f56efb8",
      "IsHidden": "False"
    },
    {
      "Start": "52491aa4b2b747b3bcc259065f94182a",
      "End": "a5e9e3359eb6476ab27f1442e9a696ef",
      "Id": "bf66110c4b80427c84a521e05e5a47c4",
      "IsHidden": "False"
    },
    {
      "Start": "3169243209434239bbb30a649674893e",
      "End": "c1a836c107084fd28821eaea7c412062",
      "Id": "8cd87d2311d646718da8a8baaf31c7b8",
      "IsHidden": "False"
    },
    {
      "Start": "3169243209434239bbb30a649674893e",
      "End": "228aeedb551c41df87e0b0da30f81374",
      "Id": "434772aca3704b4f8a78d41fc916d1bd",
      "IsHidden": "False"
    },
    {
      "Start": "6d83f350ada14dc8b831774488a483d4",
      "End": "5a708311a9a7492bb3606292d5bae4d5",
      "Id": "fd826dbce73f472dbad8b0e94bdf23ee",
      "IsHidden": "False"
    },
    {
      "Start": "23462d232b4f4a648ecffad34a351367",
      "End": "c0ef9fdc2cef46f78882ca24e83ad77c",
      "Id": "13afe9c4f4324934a09095472b5ec02d",
      "IsHidden": "False"
    },
    {
      "Start": "c9ac2b2ed5f34c52bfb5be20e7cee508",
      "End": "eaf2f50c7c5647469817a36b23f8e12a",
      "Id": "620a96472c9b426ea2c5f45feca14b83",
      "IsHidden": "False"
    },
    {
      "Start": "0456d1ca263246ed82e8371db606e678",
      "End": "d88bb371adfa48199c45f79455c6fd41",
      "Id": "d0895398cb1a444f85ffcf5aca17033a",
      "IsHidden": "False"
    },
    {
      "Start": "dc10058ddc8a4ca69dfdf6ea3b5876d1",
      "End": "422156f8031944778518684e9741a565",
      "Id": "69ea4c74434645d7a88a51b55a0b292e",
      "IsHidden": "False"
    },
    {
      "Start": "34ced7a8b12b4633b006e4b465e86bd8",
      "End": "821c8d3edcb2412bbca637999d8bc18d",
      "Id": "f1ad62387e364f228a750176afa0e0f5",
      "IsHidden": "False"
    },
    {
      "Start": "fc5a5a06f27e415da958ac2a867c3834",
      "End": "826ae1ec5daf4282a97cc7da391cf106",
      "Id": "f88d8ec41ced4fd0ab0bdc345c3f075e",
      "IsHidden": "False"
    },
    {
      "Start": "e344ca3ccf974c359afaf542f6b77b05",
      "End": "95e00b11c5d0443da9259aa64411c1ff",
      "Id": "9f8373bfece24b07a996b29eb39343bf",
      "IsHidden": "False"
    },
    {
      "Start": "619427f5a9f74b99b83662180421324d",
      "End": "a5d815d3af584fec869a95438a2198d6",
      "Id": "cde0ab61cd8c4e13b9eb586b703d2df0",
      "IsHidden": "False"
    },
    {
      "Start": "1fd3edc8229e42e9bb1228106b6a5f78",
      "End": "ea487880ec044897a34374a12cabb278",
      "Id": "1c1ff63190094a05abd61eae383244ef",
      "IsHidden": "False"
    },
    {
      "Start": "23d2632b6372436280e9b3422ac515d8",
      "End": "ccbfcb03625c47178d98f62fad1e97a1",
      "Id": "af3c1edca1c2479bb000e8ec81c59743",
      "IsHidden": "False"
    },
    {
      "Start": "1b0bd00999c84816804253beb9340629",
      "End": "92cbc44ac91e4e2b85ad45755395a1fd",
      "Id": "a6a759879b47429484b47a7a2d495870",
      "IsHidden": "False"
    },
    {
      "Start": "af07a1142ea244e8a5fbdfb084c84556",
      "End": "b599afc692a048d089321ac3faf89f53",
      "Id": "5b90cd7ee8be4047811643f283d66ea5",
      "IsHidden": "False"
    },
    {
      "Start": "59f35a51b78c4d22a83d096ca630323a",
      "End": "76087be464834edeacda0018d35c2670",
      "Id": "de63216c01f84aa78e9d1d964a570ca3",
      "IsHidden": "False"
    },
    {
      "Start": "00bf72bbbbab41cf89a4c3b41e44385b",
      "End": "6577d67b97634514a09d611c84071a97",
      "Id": "c90b0f0e2f8f47f696aa20f5b8ff80eb",
      "IsHidden": "False"
    },
    {
      "Start": "9f0b6b1c0c5045a3bc5ce59c6dc75d6a",
      "End": "38c43f09114645c78c7db4995364b9e4",
      "Id": "2ea120c0f2f84082a96d5ae6423a315d",
      "IsHidden": "False"
    },
    {
      "Start": "24755aabd28d48e7974ee011467b1d7b",
      "End": "dd4d58c3ca924f45921ce7aaa6a30cc4",
      "Id": "ca1b631e5664452fa62744161466c66b",
      "IsHidden": "False"
    },
    {
      "Start": "c8c314e4489744e5bef91c52e0b07914",
      "End": "21ca97689d1f49868611d46325c9f79e",
      "Id": "3f32ef50bccd40768d73b01b9f45baa3",
      "IsHidden": "False"
    },
    {
      "Start": "c8c314e4489744e5bef91c52e0b07914",
      "End": "cda294c7e5b145f7be42ac589225b085",
      "Id": "b303240561be440ebeddaec1c40838d9",
      "IsHidden": "False"
    },
    {
      "Start": "d10aad0ef590419bae9a2bae5f0e1e91",
      "End": "3d0f53d1666047498adaf90cac5d702f",
      "Id": "48483114166d464cbfe65f5c6a227d53",
      "IsHidden": "False"
    },
    {
      "Start": "d10aad0ef590419bae9a2bae5f0e1e91",
      "End": "69973c90d13743d18269afcb9150010f",
      "Id": "008b9aad57c649eb89e6f52b24eeb8fb",
      "IsHidden": "False"
    },
    {
      "Start": "d10aad0ef590419bae9a2bae5f0e1e91",
      "End": "567d07d9b21941f498fa49f4fc67f74c",
      "Id": "51ebd0591ba14e3184903ad8f7a05a1c",
      "IsHidden": "False"
    },
    {
      "Start": "d10aad0ef590419bae9a2bae5f0e1e91",
      "End": "15a5a47f868a4a19812e241d971d47af",
      "Id": "5e144cb9add94ab38d5d169da222cb32",
      "IsHidden": "False"
    },
    {
      "Start": "57948310d1c24f8dbfb8c8e5a6b6c8cc",
      "End": "1543876b805d4de6846d65dfe5023210",
      "Id": "3e4428a9a61046459d9bf015d7460b71",
      "IsHidden": "False"
    },
    {
      "Start": "57948310d1c24f8dbfb8c8e5a6b6c8cc",
      "End": "e298aa27c2f1420cb8e521522be67497",
      "Id": "58e57d952e554dfd82ac97c0e74821b5",
      "IsHidden": "False"
    },
    {
      "Start": "5b3f2c4cb1a14773b0bf5f56caf0e5fc",
      "End": "3b99d3cb64b544c7b541570d0ec0cabb",
      "Id": "906730d7e5a041d4828975660e2c1a04",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.15",
      "Data": {}
    }
  ],
  "Author": "Autodesk, Inc.",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [
    {
      "NodeId": "68e34578-3185-4b69-8695-6b9cede289ea",
      "Binding": {
        "ByPoints_InClassDecl-1_InFunctionScope-1_Instance0_68e34578-3185-4b69-8695-6b9cede289ea": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.18.0.4931",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": 4565.29296875,
      "EyeY": 1418.1474609375,
      "EyeZ": -2797.31201171875,
      "LookX": 14.44970703125,
      "LookY": -1098.6981201171875,
      "LookZ": -1204.0009765625,
      "UpX": 0.0060192225500941277,
      "UpY": 0.86602270603179932,
      "UpZ": -0.49996834993362427
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "ae2fdf49b6de45c181b471df59d98084",
        "Name": "Corridor.Baselines",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -809.36563828197268,
        "Y": 105.00006395422497
      },
      {
        "Id": "5f12750e58ad4275b03c8c754fcea52b",
        "Name": "Baseline.Regions",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -500.30775827791854,
        "Y": -87.04096550565427
      },
      {
        "Id": "a1726136e2824ee097e5fa63574cde58",
        "Name": "BaselineRegion.Stations",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 730.25813090500071,
        "Y": 449.93064792992948
      },
      {
        "Id": "f11d26259e254c0482deb35ce5729e7e",
        "Name": "Baseline.StationOffsetByPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2422.0384575958633,
        "Y": 141.72136464376496
      },
      {
        "Id": "ce0b17ada72841ff8f9844c0bb7fcd19",
        "Name": "List.SortByKey",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2850.1710517825732,
        "Y": 414.27027681627578
      },
      {
        "Id": "b81b79a1c3ef47bd9494fa638f2f4dc8",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 2085.467099923203,
        "Y": 416.14565982806232
      },
      {
        "Id": "4a4a84dcadd944739b6e130a200ce243",
        "Name": "List.FirstItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3265.2563098270175,
        "Y": 322.93979678367668
      },
      {
        "Id": "47a00b65dab04b509dd5c6a8f07ba5e1",
        "Name": "List.LastItem",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3269.053411195242,
        "Y": 531.4665356024027
      },
      {
        "Id": "fcf9c09505644831993d5896495e8853",
        "Name": "List.Reverse",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3608.9903509407504,
        "Y": 531.66815159046951
      },
      {
        "Id": "9e5b6142268748d8a811bbfd571e0343",
        "Name": "List.AddItemToEnd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3940.5259505330569,
        "Y": 288.00576873870961
      },
      {
        "Id": "70a29c657ebc4625bf1adb1f83a21a8d",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4221.4188482105374,
        "Y": 288.95531675210907
      },
      {
        "Id": "4e97d9e9e6c8495e913e0aed580e756d",
        "Name": "PolyCurve.ByPoints",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5214.8211793106439,
        "Y": -659.94953967216463
      },
      {
        "Id": "6bb60252a8fb484bba1ff20bf003ce8e",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4914.5505843546234,
        "Y": -710.863570993301
      },
      {
        "Id": "e20d201e04d947eea57f17e2fa0b07ec",
        "Name": "Point.ByCoordinates",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4757.431480795437,
        "Y": 281.73798382697879
      },
      {
        "Id": "56ed2d0872d74a7d946b71da88182c5d",
        "Name": "Point.X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4492.8251680919138,
        "Y": 219.68959822632723
      },
      {
        "Id": "7886220de033471fb121a00f79adb03a",
        "Name": "Point.Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4498.8330962639548,
        "Y": 352.02267939087085
      },
      {
        "Id": "68e3457831854b6986956b9cede289ea",
        "Name": "Polyline.ByPoints",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5736.3081397301112,
        "Y": 280.85606038189854
      },
      {
        "Id": "cceadf92b36b45b39cb63e2586a363f3",
        "Name": "BaselineRegion.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5368.9776163559318,
        "Y": -42.153429275081976
      },
      {
        "Id": "996ed761e23b402ba740d8ef179b4f8f",
        "Name": "Document.Current",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5170.3899650824142,
        "Y": 442.78930767803479
      },
      {
        "Id": "bfcbddc17307456a8f34a3e740143d5a",
        "Name": "Document.ModelSpace",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5411.7683834184545,
        "Y": 442.78930767803479
      },
      {
        "Id": "7cdfdcb05cbc4d9dacb91dace8abe584",
        "Name": "Baseline.CorridorFeatureLines",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 801.493947299482,
        "Y": -719.00635276103139
      },
      {
        "Id": "8336c9c7cc7b4c46ad24ecd9d444614a",
        "Name": "CorridorFeatureLine.PolyCurve",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1137.7558913588823,
        "Y": -719.00635276103139
      },
      {
        "Id": "f2742f60a21a4a71a48639cfe90444dd",
        "Name": "GeometryColor.ByGeometryColor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1492.4712347873815,
        "Y": -669.79728777673131
      },
      {
        "Id": "3f4e1e9fd47640ebaf8a1d35852ecc53",
        "Name": "Color Palette",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1275.9221327890814,
        "Y": -577.76454476931121
      },
      {
        "Id": "d538ba8ca0004b85975e3320c9b1bf4f",
        "Name": "Select Corridor",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1103.4023283881534,
        "Y": 105.83235266624268
      },
      {
        "Id": "aadb1c5a1d154ece8a5b917771464838",
        "Name": "Surface.Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5864.5736019700371,
        "Y": -658.51335488299935
      },
      {
        "Id": "9a2bd544857345e78dd1c5f58d0b367e",
        "Name": "Surface.ByPatch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5566.7660116129227,
        "Y": -660.32517211915854
      },
      {
        "Id": "0883f4d3d63e43f7a20a5e77dae227e5",
        "Name": "Region Areas",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7665.4751983032529,
        "Y": -317.57723429189525
      },
      {
        "Id": "1e3a9ebf820b423b9274df580ab9bac8",
        "Name": "Dictionary.ByKeysValues",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7350.1638197727752,
        "Y": -317.58335617365822
      },
      {
        "Id": "d9909032d13e4c508dfdfdeac94525bf",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6722.5870763449939,
        "Y": -233.36429042675076
      },
      {
        "Id": "c7ffcd8f77ed4100b450a567b88279bc",
        "Name": "Baseline.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 848.10382243658455,
        "Y": -308.26783758637453
      },
      {
        "Id": "826fcb0741044a44bbb85c799e899ca5",
        "Name": "Dictionary.ByKeysValues",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 7013.34010961349,
        "Y": -102.03548030340346
      },
      {
        "Id": "7f54224dab8647aeb668bcbc58bdff27",
        "Name": "List.AddItemToEnd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6524.54213822421,
        "Y": -70.979935174734123
      },
      {
        "Id": "cc9a6e99160242119a0676f6c07d9b22",
        "Name": "Math.Round",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6153.1946041001629,
        "Y": -561.2866108960643
      },
      {
        "Id": "8a5ecc50ff764be7906298ecd758a206",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5933.1546234793459,
        "Y": -476.2928371988321
      },
      {
        "Id": "1cad90b3d9e648a4a37437795c1b44d6",
        "Name": "Baseline.PointsByLinkCodeAtNearestStation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": false,
        "X": 1604.6713597301641,
        "Y": 417.2022542242816
      },
      {
        "Id": "cc7d8365a2db4f0f9124e34fe8830694",
        "Name": "String",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1212.27918272301,
        "Y": 685.17065786553167
      },
      {
        "Id": "645ab67057994ff8b4cfc12502459338",
        "Name": "List.IsEmpty",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -84.783697685291372,
        "Y": 30.490422337079963
      },
      {
        "Id": "28bd3fcc949e4e2db11f68fb4dda7f6a",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 219.73796554692854,
        "Y": 107.83419152274018
      },
      {
        "Id": "f5593cf2125445d8ac1e2a31e801063f",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 215.57390410912103,
        "Y": -89.728753155919549
      },
      {
        "Id": "5aee6af158104ff6bd5f2f10339c7f2e",
        "Name": "Polyline.SetClosed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 6030.7310208954814,
        "Y": 350.51174409507075
      },
      {
        "Id": "a1488828adf64615b45621deda9c27c7",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5760.44569003562,
        "Y": 487.10755646510745
      }
    ],
    "Annotations": [
      {
        "Id": "8807b299bb3047038093d4ba097ad04d",
        "Title": "Input",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d538ba8ca0004b85975e3320c9b1bf4f"
        ],
        "HasNestedGroups": false,
        "Left": -1113.4023283881534,
        "Top": 32.832352666242684,
        "Width": 208.0,
        "Height": 224.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 105.83235266624268,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "6c7e5ab6bfe2454d85fe20218edc193d",
        "Title": "Visualize the corridor",
        "DescriptionText": "Get the Dynamo polycurve geometry for all the corridor feature lines, then display them in Dynamo space with a specified color. This is purely for reference purposes only and has no effect on the rest of the graph.",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7cdfdcb05cbc4d9dacb91dace8abe584",
          "8336c9c7cc7b4c46ad24ecd9d444614a",
          "f2742f60a21a4a71a48639cfe90444dd",
          "3f4e1e9fd47640ebaf8a1d35852ecc53"
        ],
        "HasNestedGroups": false,
        "Left": 791.493947299482,
        "Top": -801.00635276103139,
        "Width": 1030.9772874878995,
        "Height": 355.24180799172018,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -719.00635276103139,
        "InitialHeight": 286.24180799172018,
        "TextblockHeight": 72.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "ae1f661e153947b4b7e6d4a246ad5e6f",
        "Title": "Get the stations for each region in each baseline",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ae2fdf49b6de45c181b471df59d98084",
          "5f12750e58ad4275b03c8c754fcea52b",
          "a1726136e2824ee097e5fa63574cde58",
          "c7ffcd8f77ed4100b450a567b88279bc",
          "f5593cf2125445d8ac1e2a31e801063f",
          "645ab67057994ff8b4cfc12502459338",
          "28bd3fcc949e4e2db11f68fb4dda7f6a",
          "80affb0308c74e25a6101497c9f1849b",
          "5d9fd4c9d2bb4c86a93cadeea7a4ca9e"
        ],
        "HasNestedGroups": false,
        "Left": -819.36563828197268,
        "Top": -381.26783758637453,
        "Width": 1892.4694607185572,
        "Height": 963.198485516304,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -308.26783758637453,
        "InitialHeight": 903.198485516304,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "777c293cb9434dad8bb0937bb34300fc",
        "Title": "Get region areas",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4e97d9e9e6c8495e913e0aed580e756d",
          "6bb60252a8fb484bba1ff20bf003ce8e",
          "aadb1c5a1d154ece8a5b917771464838",
          "9a2bd544857345e78dd1c5f58d0b367e",
          "cc9a6e99160242119a0676f6c07d9b22",
          "8a5ecc50ff764be7906298ecd758a206"
        ],
        "HasNestedGroups": false,
        "Left": 4904.5505843546234,
        "Top": -783.863570993301,
        "Width": 1479.6440197455395,
        "Height": 439.57073379446888,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -710.863570993301,
        "InitialHeight": 379.57073379446888,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "8bba4e84e8c54290807c384131b9fef8",
        "Title": "Get the points for each point code",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b81b79a1c3ef47bd9494fa638f2f4dc8",
          "1cad90b3d9e648a4a37437795c1b44d6",
          "cc7d8365a2db4f0f9124e34fe8830694",
          "92f4d643309e4b19bf3f32b9658d9ad0",
          "227cc76577424c5fbeb9936725f4d104"
        ],
        "HasNestedGroups": false,
        "Left": 1127.27918272301,
        "Top": 227.14565982806232,
        "Width": 1211.1879172001929,
        "Height": 590.02499803746935,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 300.14565982806232,
        "InitialHeight": 530.02499803746935,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a17f7ebb822049a38eb4f6e0faf3bec0",
        "Title": "Sort the points by offset",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f11d26259e254c0482deb35ce5729e7e",
          "ce0b17ada72841ff8f9844c0bb7fcd19",
          "37be6028ecb9461e97172f6fe9d062fa"
        ],
        "HasNestedGroups": false,
        "Left": 2412.0384575958633,
        "Top": 68.721364643764957,
        "Width": 700.13259418670987,
        "Height": 524.54891217251088,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 141.72136464376496,
        "InitialHeight": 417.54891217251082,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "00d9c4e2fbd24c989a2a606aa26afd15",
        "Title": "Get the points furthest from the baseline",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4a4a84dcadd944739b6e130a200ce243",
          "47a00b65dab04b509dd5c6a8f07ba5e1",
          "fcf9c09505644831993d5896495e8853",
          "9e5b6142268748d8a811bbfd571e0343",
          "70a29c657ebc4625bf1adb1f83a21a8d",
          "4ddc02f0d03d4281931704f6aafae17f",
          "45f4918315d140dd84ec9f0d66efed77",
          "7d3fcb7a19834d988fefa7c5d7710596",
          "5d1f36205f204e97bcbddaddd0e103bb"
        ],
        "HasNestedGroups": false,
        "Left": 3197.2563098270175,
        "Top": 113.00576873870961,
        "Width": 1229.1625383835199,
        "Height": 550.66238285176,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 186.00576873870961,
        "InitialHeight": 490.6623828517599,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "e8fa2d0f40574ecfa76374cd20678708",
        "Title": "Flatten points to XY plane",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e20d201e04d947eea57f17e2fa0b07ec",
          "56ed2d0872d74a7d946b71da88182c5d",
          "7886220de033471fb121a00f79adb03a"
        ],
        "HasNestedGroups": false,
        "Left": 4482.8251680919138,
        "Top": 146.68959822632723,
        "Width": 509.60631270352314,
        "Height": 337.33308116454361,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 219.68959822632723,
        "InitialHeight": 277.33308116454361,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "cd1182a5fe354def8423732823b0d231",
        "Title": "Create the polylines",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "68e3457831854b6986956b9cede289ea",
          "996ed761e23b402ba740d8ef179b4f8f",
          "bfcbddc17307456a8f34a3e740143d5a",
          "a1488828adf64615b45621deda9c27c7",
          "5aee6af158104ff6bd5f2f10339c7f2e"
        ],
        "HasNestedGroups": false,
        "Left": 5160.3899650824142,
        "Top": 207.85606038189854,
        "Width": 1103.3410558130672,
        "Height": 411.25149608320891,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 280.85606038189854,
        "InitialHeight": 306.93324729613624,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "e13a108b6dff4b85a10fc9fc9b234bed",
        "Title": "Prep output for Dynamo Player",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0883f4d3d63e43f7a20a5e77dae227e5",
          "1e3a9ebf820b423b9274df580ab9bac8",
          "d9909032d13e4c508dfdfdeac94525bf",
          "826fcb0741044a44bbb85c799e899ca5",
          "7f54224dab8647aeb668bcbc58bdff27"
        ],
        "HasNestedGroups": false,
        "Left": 6514.54213822421,
        "Top": -390.58335617365822,
        "Width": 1437.9330600790427,
        "Height": 481.60342099892409,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -317.58335617365822,
        "InitialHeight": 395.03385586038405,
        "TextblockHeight": 63.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "4ddc02f0d03d4281931704f6aafae17f",
        "Title": "The points are sorted sequentially by station, so we need to reverse the order of the points on one side so that the polylines will be created properly. In this case, we choose to reverse the points on the right side to yield a clockwise ordering for the points.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3544.9903509407504,
        "Top": 423.66815159046951,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "fcf9c09505644831993d5896495e8853"
      },
      {
        "Id": "45f4918315d140dd84ec9f0d66efed77",
        "Title": "After sorting by offset, the point furthest from the baseline on the left (i.e., negative offset) will be the first point in the list.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3207.2563098270175,
        "Top": 243.93979678367668,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "4a4a84dcadd944739b6e130a200ce243"
      },
      {
        "Id": "7d3fcb7a19834d988fefa7c5d7710596",
        "Title": "Similarly, the point furthest from the baseline on the right (i.e., positive offset) will be the last point in the list.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3208.053411195242,
        "Top": 452.4665356024027,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "47a00b65dab04b509dd5c6a8f07ba5e1"
      },
      {
        "Id": "5d1f36205f204e97bcbddaddd0e103bb",
        "Title": "Now we add the list of right points to the end of the list of left points to create the full list of points for the region. Again, these will be ordered in a clockwise fashion.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3899.0259505330569,
        "Top": 194.00576873870961,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "9e5b6142268748d8a811bbfd571e0343"
      },
      {
        "Id": "37be6028ecb9461e97172f6fe9d062fa",
        "Title": "The points are currently grouped by station, and then this node sorts the points at each station by their offset from the baseline.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2819.1710517825732,
        "Top": 335.27027681627578,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "ce0b17ada72841ff8f9844c0bb7fcd19"
      },
      {
        "Id": "80affb0308c74e25a6101497c9f1849b",
        "Title": "This returns the list of stations where assemblies are inserted along the corridor.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 715.25813090500071,
        "Top": 384.93064792992948,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "a1726136e2824ee097e5fa63574cde58"
      },
      {
        "Id": "92f4d643309e4b19bf3f32b9658d9ad0",
        "Title": "We can simplify the list structure a little bit here moving forward because we aren't concerned with keeping track of the different point codes for each point. All we care about from this point on is the point geometry.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2037.467099923203,
        "Top": 308.14565982806232,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "b81b79a1c3ef47bd9494fa638f2f4dc8"
      },
      {
        "Id": "5d9fd4c9d2bb4c86a93cadeea7a4ca9e",
        "Title": "The corridor may contain empty baselines without any regions in them, so it's a good idea to filter those out right at the start so we don't errors later on.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -141.28369768529137,
        "Top": -63.509577662920037,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "645ab67057994ff8b4cfc12502459338"
      },
      {
        "Id": "227cc76577424c5fbeb9936725f4d104",
        "Title": "IMPORTANT\nThis graph assumes that the corridor contains \"Top\" link codes, and that the those links extend to the furthest outer limits of the corridor. This is most likely the case in the majority of circumstances, but the logic may need to be adjusted for corridors that don't follow this pattern.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1137.27918272301,
        "Top": 548.17065786553167,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676",
        "PinnedNode": "cc7d8365a2db4f0f9124e34fe8830694"
      }
    ],
    "X": 205.28306581812819,
    "Y": 438.39438843370692,
    "Zoom": 0.15885689318254489
  }
}